
#ifndef _H_intri_test
#define _H_intri_test
/* 
 * Copyright (c) 2008-2012, Andy Bierman, All Rights Reserved.
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 *

*** Generated by yangdump 2.13-0

  Combined SIL header
  module intri-test
  revision 2022-05-24
  namespace http://intri.com.tw
  organization Intrising Inc.

 */

#include <libxml/xmlstring.h>

#include "dlq.h"
#include "ncxtypes.h"
#include "op.h"
#include "status.h"
#include "val.h"

#ifdef __cplusplus
extern "C" {
#endif

#define y_intri_test_M_intri_test (const xmlChar *)"intri-test"
#define y_intri_test_R_intri_test (const xmlChar *)"2022-05-24"

#define y_intri_test_N_counter (const xmlChar *)"counter"
#define y_intri_test_N_mac_addr (const xmlChar *)"mac-addr"
#define y_intri_test_N_test_apis (const xmlChar *)"test-apis"
#define y_intri_test_N_test_counter (const xmlChar *)"test-counter"
#define y_intri_test_N_test_mac_addr (const xmlChar *)"test-mac-addr"

/* container /test-apis/test-counter */
typedef struct y_intri_test_T_test_apis_test_counter_ {
  uint64 counter;
} y_intri_test_T_test_apis_test_counter;

/* container /test-apis/test-mac-addr */
typedef struct y_intri_test_T_test_apis_test_mac_addr_ {
  xmlChar *mac_addr;
} y_intri_test_T_test_apis_test_mac_addr;

/* container /test-apis */
typedef struct y_intri_test_T_test_apis_ {
  y_intri_test_T_test_apis_test_counter test_counter;
  y_intri_test_T_test_apis_test_mac_addr test_mac_addr;
} y_intri_test_T_test_apis;
/********************************************************************
* FUNCTION y_intri_test_init
* 
* initialize the intri-test server instrumentation library
* 
* INPUTS:
*    modname == requested module name
*    revision == requested version (NULL for any)
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t y_intri_test_init (
  const xmlChar *modname,
  const xmlChar *revision);

/********************************************************************
* FUNCTION y_intri_test_init2
* 
* SIL init phase 2: non-config data structures
* Called after running config is loaded
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t y_intri_test_init2 (void);

/********************************************************************
* FUNCTION y_intri_test_cleanup
*    cleanup the server instrumentation library
* 
********************************************************************/
extern void y_intri_test_cleanup (void);

#ifdef __cplusplus
} /* end extern 'C' */
#endif

#endif