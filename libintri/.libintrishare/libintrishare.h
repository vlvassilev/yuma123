/* Code generated by cmd/cgo; DO NOT EDIT. */

/* package command-line-arguments */


#line 1 "cgo-builtin-export-prolog"

#include <stddef.h> /* for ptrdiff_t below */

#ifndef GO_CGO_EXPORT_PROLOGUE_H
#define GO_CGO_EXPORT_PROLOGUE_H

#ifndef GO_CGO_GOSTRING_TYPEDEF
typedef struct { const char *p; ptrdiff_t n; } _GoString_;
#endif

#endif

/* Start of preamble from import "C" comments.  */


#line 5 "cgo.go"

#include "github.com/Intrising/intri-type/cli/cli.pb.h"
#include "github.com/Intrising/intri-type/common/common.pb.h"
#include "github.com/Intrising/intri-type/config/config.pb.h"
#include "github.com/Intrising/intri-type/core/access/access.pb.h"
#include "github.com/Intrising/intri-type/core/acl/acl.pb.h"
#include "github.com/Intrising/intri-type/core/cdp/cdp.pb.h"
#include "github.com/Intrising/intri-type/core/dhcp/dhcp.pb.h"
#include "github.com/Intrising/intri-type/core/dhcpserver/dhcpserver.pb.h"
#include "github.com/Intrising/intri-type/core/diagnostic/diagnostic.pb.h"
#include "github.com/Intrising/intri-type/core/fdb/fdb.pb.h"
#include "github.com/Intrising/intri-type/core/files/files.pb.h"
#include "github.com/Intrising/intri-type/core/gvrp/gvrp.pb.h"
#include "github.com/Intrising/intri-type/core/isolation/isolation.pb.h"
#include "github.com/Intrising/intri-type/core/lacp/lacp.pb.h"
#include "github.com/Intrising/intri-type/core/lldp/lldp.pb.h"
#include "github.com/Intrising/intri-type/core/loop/loop.pb.h"
#include "github.com/Intrising/intri-type/core/maintenance/maintenance.pb.h"
#include "github.com/Intrising/intri-type/core/mirroring/mirroring.pb.h"
#include "github.com/Intrising/intri-type/core/monitor/monitor.pb.h"
#include "github.com/Intrising/intri-type/core/multicast/multicast.pb.h"
#include "github.com/Intrising/intri-type/core/network/network.pb.h"
#include "github.com/Intrising/intri-type/core/poe/poe.pb.h"
#include "github.com/Intrising/intri-type/core/port/port.pb.h"
#include "github.com/Intrising/intri-type/core/portauthentication/portauthentication.pb.h"
#include "github.com/Intrising/intri-type/core/portsecurity/portsecurity.pb.h"
#include "github.com/Intrising/intri-type/core/ptp/ptp.pb.h"
#include "github.com/Intrising/intri-type/core/qos/qos.pb.h"
#include "github.com/Intrising/intri-type/core/rmon/rmon.pb.h"
#include "github.com/Intrising/intri-type/core/sfp/sfp.pb.h"
#include "github.com/Intrising/intri-type/core/stormcontrol/stormcontrol.pb.h"
#include "github.com/Intrising/intri-type/core/stp/stp.pb.h"
#include "github.com/Intrising/intri-type/core/system/system.pb.h"
#include "github.com/Intrising/intri-type/core/time/time.pb.h"
#include "github.com/Intrising/intri-type/core/timerange/timerange.pb.h"
#include "github.com/Intrising/intri-type/core/timesync/timesync.pb.h"
#include "github.com/Intrising/intri-type/core/udld/udld.pb.h"
#include "github.com/Intrising/intri-type/core/userinterface/userinterface.pb.h"
#include "github.com/Intrising/intri-type/core/vlan/vlan.pb.h"
#include "github.com/Intrising/intri-type/cpss/cpss.pb.h"
#include "github.com/Intrising/intri-type/device/device.pb.h"
#include "github.com/Intrising/intri-type/error/error.pb.h"
#include "github.com/Intrising/intri-type/event/event.pb.h"
#include "github.com/Intrising/intri-type/hardware/hardware.pb.h"
#include "github.com/Intrising/intri-type/log/log.pb.h"
#include "github.com/Intrising/intri-type/snmp/snmp.pb.h"
#include "github.com/Intrising/intri-type/snmptrap/snmptrap.pb.h"
#include "github.com/Intrising/intri-type/timecontrol/timecontrol.pb.h"
#include "github.com/envoyproxy/protoc-gen-validate/validate/validate.pb.h"
#include "github.com/golang/protobuf/ptypes/duration/duration.pb.h"
#include "github.com/golang/protobuf/ptypes/empty/empty.pb.h"
#include "github.com/golang/protobuf/ptypes/timestamp/timestamp.pb.h"
#include "google.golang.org/genproto/googleapis/api/annotations/annotations.pb.h"
#include "google.golang.org/genproto/googleapis/type/date/date.pb.h"
#include "google.golang.org/genproto/googleapis/type/dayofweek/dayofweek.pb.h"
#include "google.golang.org/genproto/googleapis/type/timeofday/timeofday.pb.h"
#include <stdbool.h>
#include <stdint.h>
#include <stdio.h>
#include <stdlib.h>

#line 1 "cgo-generated-wrapper"


/* End of preamble from import "C" comments.  */


/* Start of boilerplate cgo prologue.  */
#line 1 "cgo-gcc-export-header-prolog"

#ifndef GO_CGO_PROLOGUE_H
#define GO_CGO_PROLOGUE_H

typedef signed char GoInt8;
typedef unsigned char GoUint8;
typedef short GoInt16;
typedef unsigned short GoUint16;
typedef int GoInt32;
typedef unsigned int GoUint32;
typedef long long GoInt64;
typedef unsigned long long GoUint64;
typedef GoInt64 GoInt;
typedef GoUint64 GoUint;
typedef __SIZE_TYPE__ GoUintptr;
typedef float GoFloat32;
typedef double GoFloat64;
typedef float _Complex GoComplex64;
typedef double _Complex GoComplex128;

/*
  static assertion to make sure the file is being used on architecture
  at least with matching size of GoInt.
*/
typedef char _check_for_64_bit_pointer_matching_GoInt[sizeof(void*)==64/8 ? 1:-1];

#ifndef GO_CGO_GOSTRING_TYPEDEF
typedef _GoString_ GoString;
#endif
typedef void *GoMap;
typedef void *GoChan;
typedef struct { void *t; void *v; } GoInterface;
typedef struct { void *data; GoInt len; GoInt cap; } GoSlice;

#endif

/* End of boilerplate cgo prologue.  */

#ifdef __cplusplus
extern "C" {
#endif

extern void cli_CLI_SetConfig(struct userinterfacepb_CLIConfig* param0, struct emptypb_Empty* param1);
extern void cli_CLI_RunScript(struct clipb_ScriptAction* param0, struct emptypb_Empty* param1);
extern void config_Config_RunImportConfig(struct commonpb_ImportPathRequest* param0, struct emptypb_Empty* param1);
extern void config_Config_RunExportConfig(struct commonpb_ExportPathRequest* param0, struct emptypb_Empty* param1);
extern void config_Config_GetSaveModeStatus(struct emptypb_Empty* param0, struct configpb_SaveModeStatus* param1);
extern void config_Config_RunSaveRunningConfig(struct emptypb_Empty* param0, struct emptypb_Empty* param1);
extern void config_Config_RunRestoreDefaultConfig(struct configpb_RestoreDefaultType* param0, struct emptypb_Empty* param1);
extern void config_Config_RunCopyRunningConfig(struct commonpb_Path* param0, struct emptypb_Empty* param1);
extern void config_Config_RunCopyDefaultConfig(struct commonpb_Path* param0, struct emptypb_Empty* param1);
extern void config_Config_GetRunningConfig(struct emptypb_Empty* param0, struct configpb_AllServicesConfig* param1);
extern void config_Config_GetDefaultConfig(struct emptypb_Empty* param0, struct configpb_AllServicesConfig* param1);
extern void config_Config_GetSavedConfig(struct emptypb_Empty* param0, struct configpb_AllServicesConfig* param1);
extern void config_Config_GetRunningAclConfig(struct emptypb_Empty* param0, struct aclpb_Config* param1);
extern void config_Config_SetRunningAclConfig(struct aclpb_Config* param0, struct emptypb_Empty* param1);
extern void config_Config_SetDefaultAclConfig(struct aclpb_Config* param0, struct emptypb_Empty* param1);
extern void config_Config_GetRunningVlanConfig(struct emptypb_Empty* param0, struct vlanpb_Config* param1);
extern void config_Config_SetRunningVlanConfig(struct vlanpb_Config* param0, struct emptypb_Empty* param1);
extern void config_Config_SetDefaultVlanConfig(struct vlanpb_Config* param0, struct emptypb_Empty* param1);
extern void config_Config_GetRunningGvrpConfig(struct emptypb_Empty* param0, struct gvrppb_Config* param1);
extern void config_Config_SetRunningGvrpConfig(struct gvrppb_Config* param0, struct emptypb_Empty* param1);
extern void config_Config_SetDefaultGvrpConfig(struct gvrppb_Config* param0, struct emptypb_Empty* param1);
extern void config_Config_GetRunningAccessConfig(struct emptypb_Empty* param0, struct accesspb_Config* param1);
extern void config_Config_SetRunningAccessConfig(struct accesspb_Config* param0, struct emptypb_Empty* param1);
extern void config_Config_SetDefaultAccessConfig(struct accesspb_Config* param0, struct emptypb_Empty* param1);
extern void config_Config_GetRunningUserInterfaceConfig(struct emptypb_Empty* param0, struct userinterfacepb_Config* param1);
extern void config_Config_SetRunningUserInterfaceConfig(struct userinterfacepb_Config* param0, struct emptypb_Empty* param1);
extern void config_Config_SetDefaultUserInterfaceConfig(struct userinterfacepb_Config* param0, struct emptypb_Empty* param1);
extern void config_Config_GetRunningSystemConfig(struct emptypb_Empty* param0, struct systempb_Config* param1);
extern void config_Config_SetRunningSystemConfig(struct systempb_Config* param0, struct emptypb_Empty* param1);
extern void config_Config_SetDefaultSystemConfig(struct systempb_Config* param0, struct emptypb_Empty* param1);
extern void config_Config_GetRunningNetworkConfig(struct emptypb_Empty* param0, struct networkpb_Config* param1);
extern void config_Config_SetRunningNetworkConfig(struct networkpb_Config* param0, struct emptypb_Empty* param1);
extern void config_Config_SetDefaultNetworkConfig(struct networkpb_Config* param0, struct emptypb_Empty* param1);
extern void config_Config_GetRunningTimeConfig(struct emptypb_Empty* param0, struct timepb_Config* param1);
extern void config_Config_SetRunningTimeConfig(struct timepb_Config* param0, struct emptypb_Empty* param1);
extern void config_Config_SetDefaultTimeConfig(struct timepb_Config* param0, struct emptypb_Empty* param1);
extern void config_Config_GetRunningPortConfig(struct emptypb_Empty* param0, struct portpb_Config* param1);
extern void config_Config_SetRunningPortConfig(struct portpb_Config* param0, struct emptypb_Empty* param1);
extern void config_Config_SetDefaultPortConfig(struct portpb_Config* param0, struct emptypb_Empty* param1);
extern void config_Config_GetRunningSFPConfig(struct emptypb_Empty* param0, struct sfppb_Config* param1);
extern void config_Config_SetRunningSFPConfig(struct sfppb_Config* param0, struct emptypb_Empty* param1);
extern void config_Config_SetDefaultSFPConfig(struct sfppb_Config* param0, struct emptypb_Empty* param1);
extern void config_Config_GetRunningMirroringConfig(struct emptypb_Empty* param0, struct mirroringpb_Config* param1);
extern void config_Config_SetRunningMirroringConfig(struct mirroringpb_Config* param0, struct emptypb_Empty* param1);
extern void config_Config_SetDefaultMirroringConfig(struct mirroringpb_Config* param0, struct emptypb_Empty* param1);
extern void config_Config_GetRunningIsolationConfig(struct emptypb_Empty* param0, struct isolationpb_Config* param1);
extern void config_Config_SetRunningIsolationConfig(struct isolationpb_Config* param0, struct emptypb_Empty* param1);
extern void config_Config_SetDefaultIsolationConfig(struct isolationpb_Config* param0, struct emptypb_Empty* param1);
extern void config_Config_GetRunningFDBConfig(struct emptypb_Empty* param0, struct fdbpb_Config* param1);
extern void config_Config_SetRunningFDBConfig(struct fdbpb_Config* param0, struct emptypb_Empty* param1);
extern void config_Config_SetDefaultFDBConfig(struct fdbpb_Config* param0, struct emptypb_Empty* param1);
extern void config_Config_GetRunningPortSecurityConfig(struct emptypb_Empty* param0, struct portsecuritypb_Config* param1);
extern void config_Config_SetRunningPortSecurityConfig(struct portsecuritypb_Config* param0, struct emptypb_Empty* param1);
extern void config_Config_SetDefaultPortSecurityConfig(struct portsecuritypb_Config* param0, struct emptypb_Empty* param1);
extern void config_Config_GetRunningFilesConfig(struct emptypb_Empty* param0, struct filespb_Config* param1);
extern void config_Config_SetRunningFilesConfig(struct filespb_Config* param0, struct emptypb_Empty* param1);
extern void config_Config_SetDefaultFilesConfig(struct filespb_Config* param0, struct emptypb_Empty* param1);
extern void config_Config_GetRunningLACPConfig(struct emptypb_Empty* param0, struct lacppb_Config* param1);
extern void config_Config_SetRunningLACPConfig(struct lacppb_Config* param0, struct emptypb_Empty* param1);
extern void config_Config_SetDefaultLACPConfig(struct lacppb_Config* param0, struct emptypb_Empty* param1);
extern void config_Config_GetRunningMulticastConfig(struct emptypb_Empty* param0, struct multicastpb_Config* param1);
extern void config_Config_SetRunningMulticastConfig(struct multicastpb_Config* param0, struct emptypb_Empty* param1);
extern void config_Config_SetDefaultMulticastConfig(struct multicastpb_Config* param0, struct emptypb_Empty* param1);
extern void config_Config_GetRunningStormControlConfig(struct emptypb_Empty* param0, struct stormcontrolpb_Config* param1);
extern void config_Config_SetRunningStormControlConfig(struct stormcontrolpb_Config* param0, struct emptypb_Empty* param1);
extern void config_Config_SetDefaultStormControlConfig(struct stormcontrolpb_Config* param0, struct emptypb_Empty* param1);
extern void config_Config_GetRunningDHCPConfig(struct emptypb_Empty* param0, struct dhcppb_Config* param1);
extern void config_Config_SetRunningDHCPConfig(struct dhcppb_Config* param0, struct emptypb_Empty* param1);
extern void config_Config_SetDefaultDHCPConfig(struct dhcppb_Config* param0, struct emptypb_Empty* param1);
extern void config_Config_GetRunningQoSConfig(struct emptypb_Empty* param0, struct qospb_Config* param1);
extern void config_Config_SetRunningQoSConfig(struct qospb_Config* param0, struct emptypb_Empty* param1);
extern void config_Config_SetDefaultQoSConfig(struct qospb_Config* param0, struct emptypb_Empty* param1);
extern void config_Config_GetRunningLoopConfig(struct emptypb_Empty* param0, struct looppb_Config* param1);
extern void config_Config_SetRunningLoopConfig(struct looppb_Config* param0, struct emptypb_Empty* param1);
extern void config_Config_SetDefaultLoopConfig(struct looppb_Config* param0, struct emptypb_Empty* param1);
extern void config_Config_GetRunningLLDPConfig(struct emptypb_Empty* param0, struct lldppb_Config* param1);
extern void config_Config_SetRunningLLDPConfig(struct lldppb_Config* param0, struct emptypb_Empty* param1);
extern void config_Config_SetDefaultLLDPConfig(struct lldppb_Config* param0, struct emptypb_Empty* param1);
extern void config_Config_GetRunningPoeConfig(struct emptypb_Empty* param0, struct poepb_Config* param1);
extern void config_Config_SetRunningPoeConfig(struct poepb_Config* param0, struct emptypb_Empty* param1);
extern void config_Config_SetDefaultPoeConfig(struct poepb_Config* param0, struct emptypb_Empty* param1);
extern void config_Config_GetRunningCDPConfig(struct emptypb_Empty* param0, struct cdppb_Config* param1);
extern void config_Config_SetDefaultCDPConfig(struct cdppb_Config* param0, struct emptypb_Empty* param1);
extern void config_Config_SetRunningCDPConfig(struct cdppb_Config* param0, struct emptypb_Empty* param1);
extern void config_Config_GetRunningDHCPServerConfig(struct emptypb_Empty* param0, struct dhcpserverpb_Config* param1);
extern void config_Config_SetRunningDHCPServerConfig(struct dhcpserverpb_Config* param0, struct emptypb_Empty* param1);
extern void config_Config_SetDefaultDHCPServerConfig(struct dhcpserverpb_Config* param0, struct emptypb_Empty* param1);
extern void config_Config_GetRunningSTPConfig(struct emptypb_Empty* param0, struct stppb_STPConfig* param1);
extern void config_Config_SetRunningSTPConfig(struct stppb_STPConfig* param0, struct emptypb_Empty* param1);
extern void config_Config_SetDefaultSTPConfig(struct stppb_STPConfig* param0, struct emptypb_Empty* param1);
extern void config_Config_GetRunningMSTPConfig(struct emptypb_Empty* param0, struct stppb_MSTPConfig* param1);
extern void config_Config_SetRunningMSTPConfig(struct stppb_MSTPConfig* param0, struct emptypb_Empty* param1);
extern void config_Config_SetDefaultMSTPConfig(struct stppb_MSTPConfig* param0, struct emptypb_Empty* param1);
extern void config_Config_GetRunningTimeRangeConfig(struct emptypb_Empty* param0, struct timerangepb_Config* param1);
extern void config_Config_SetDefaultTimeRangeConfig(struct timerangepb_Config* param0, struct emptypb_Empty* param1);
extern void config_Config_SetRunningTimeRangeConfig(struct timerangepb_Config* param0, struct emptypb_Empty* param1);
extern void config_Config_GetRunningArpInspectionConfig(struct emptypb_Empty* param0, struct dhcppb_ARPInspectionConfig* param1);
extern void config_Config_SetDefaultArpInspectionConfig(struct dhcppb_ARPInspectionConfig* param0, struct emptypb_Empty* param1);
extern void config_Config_SetRunningArpInspectionConfig(struct dhcppb_ARPInspectionConfig* param0, struct emptypb_Empty* param1);
extern void config_Config_GetRunningPTPConfig(struct emptypb_Empty* param0, struct ptppb_Config* param1);
extern void config_Config_SetDefaultPTPConfig(struct ptppb_Config* param0, struct emptypb_Empty* param1);
extern void config_Config_SetRunningPTPConfig(struct ptppb_Config* param0, struct emptypb_Empty* param1);
extern void config_Config_GetRunningMonitorConfig(struct emptypb_Empty* param0, struct monitorpb_Config* param1);
extern void config_Config_SetDefaultMonitorConfig(struct monitorpb_Config* param0, struct emptypb_Empty* param1);
extern void config_Config_SetRunningMonitorConfig(struct monitorpb_Config* param0, struct emptypb_Empty* param1);
extern void config_Config_GetRunningTimeSyncConfig(struct emptypb_Empty* param0, struct timesyncpb_Config* param1);
extern void config_Config_SetRunningTimeSyncConfig(struct timesyncpb_Config* param0, struct emptypb_Empty* param1);
extern void config_Config_SetDefaultTimeSyncConfig(struct timesyncpb_Config* param0, struct emptypb_Empty* param1);
extern void config_Config_GetRunningUdldConfig(struct emptypb_Empty* param0, struct udldpb_Config* param1);
extern void config_Config_SetRunningUdldConfig(struct udldpb_Config* param0, struct emptypb_Empty* param1);
extern void config_Config_SetDefaultUdldConfig(struct udldpb_Config* param0, struct emptypb_Empty* param1);
extern void config_Config_GetRunningPortAuthenticationConfig(struct emptypb_Empty* param0, struct portauthenticationpb_Config* param1);
extern void config_Config_SetRunningPortAuthenticationConfig(struct portauthenticationpb_Config* param0, struct emptypb_Empty* param1);
extern void config_Config_SetDefaultPortAuthenticationConfig(struct portauthenticationpb_Config* param0, struct emptypb_Empty* param1);
extern void config_Config_GetRunningLogConfig(struct emptypb_Empty* param0, struct logpb_Config* param1);
extern void config_Config_SetDefaultLogConfig(struct logpb_Config* param0, struct emptypb_Empty* param1);
extern void config_Config_SetRunningLogConfig(struct logpb_Config* param0, struct emptypb_Empty* param1);
extern void access_Access_GetConfig(struct emptypb_Empty* param0, struct accesspb_Config* param1);
extern void access_Access_GetAuthenticationConfig(struct emptypb_Empty* param0, struct accesspb_AuthenticationConfig* param1);
extern void access_Access_SetAuthenticationConfig(struct accesspb_AuthenticationConfig* param0, struct emptypb_Empty* param1);
extern void access_Access_Login(struct accesspb_LoginRequest* param0, struct accesspb_Token* param1);
extern void access_Access_Logout(struct emptypb_Empty* param0, struct emptypb_Empty* param1);
extern void access_Access_PAMLogin(struct accesspb_LoginRequest* param0, struct eventpb_LoginParameter* param1);
extern void access_Access_GetUsers(struct emptypb_Empty* param0, struct accesspb_UsersConfig* param1);
extern void access_Access_AddUser(struct accesspb_UserEntry* param0, struct emptypb_Empty* param1);
extern void access_Access_DeleteUser(struct commonpb_Name* param0, struct emptypb_Empty* param1);
extern void access_Access_UpdateUser(struct accesspb_UserEntry* param0, struct emptypb_Empty* param1);
extern void access_Access_RunEncryptPassword(struct accesspb_Password* param0, struct accesspb_EncryptedPassword* param1);
extern void access_Access_RunUserEnterPassword(struct accesspb_UserPassword* param0, struct emptypb_Empty* param1);
extern void access_Access_RunUserEnterSNMPV3AuthPassword(struct accesspb_UserPassword* param0, struct emptypb_Empty* param1);
extern void access_Access_RunUserEnterSNMPV3PrivacyPassword(struct accesspb_UserPassword* param0, struct emptypb_Empty* param1);
extern void access_Access_GetGroups(struct emptypb_Empty* param0, struct accesspb_GroupsConfig* param1);
extern void access_Access_AddGroup(struct accesspb_GroupEntry* param0, struct emptypb_Empty* param1);
extern void access_Access_DeleteGroup(struct commonpb_Name* param0, struct emptypb_Empty* param1);
extern void access_Access_UpdateGroup(struct accesspb_GroupEntry* param0, struct emptypb_Empty* param1);
extern void access_Access_GetAuthenticatorServerConfig(struct emptypb_Empty* param0, struct accesspb_AuthenticationServersConfig* param1);
extern void access_Access_AddAuthenticatorServerConfig(struct accesspb_AuthenticationServerEntry* param0, struct emptypb_Empty* param1);
extern void access_Access_DeleteAuthenticatorServerConfig(struct commonpb_Name* param0, struct emptypb_Empty* param1);
extern void access_Access_UpdateAuthenticatorServerConfig(struct accesspb_AuthenticationServerEntry* param0, struct emptypb_Empty* param1);
extern void access_Access_GetRestrictions(struct emptypb_Empty* param0, struct accesspb_RestrictionsConfig* param1);
extern void access_Access_AddRestriction(struct accesspb_RestrictionEntry* param0, struct emptypb_Empty* param1);
extern void access_Access_DeleteRestriction(struct commonpb_Name* param0, struct emptypb_Empty* param1);
extern void access_Access_UpdateRestriction(struct accesspb_RestrictionEntry* param0, struct emptypb_Empty* param1);
extern void acl_ACL_GetConfig(struct emptypb_Empty* param0, struct aclpb_Config* param1);
extern void acl_ACL_GetInterfaceList(struct emptypb_Empty* param0, struct aclpb_InterfaceList* param1);
extern void acl_ACL_UpdateInterface(struct aclpb_InterfaceEntry* param0, struct emptypb_Empty* param1);
extern void acl_ACL_UpdateInterfaceList(struct aclpb_InterfaceList* param0, struct emptypb_Empty* param1);
extern void acl_ACL_GetACLList(struct emptypb_Empty* param0, struct aclpb_ACLList* param1);
extern void acl_ACL_AddACL(struct aclpb_ACLEntry* param0, struct emptypb_Empty* param1);
extern void acl_ACL_DeleteACL(struct commonpb_Name* param0, struct emptypb_Empty* param1);
extern void acl_ACL_UpdateACL(struct aclpb_ACLEntry* param0, struct emptypb_Empty* param1);
extern void acl_ACL_GetACEList(struct emptypb_Empty* param0, struct aclpb_ACEList* param1);
extern void acl_ACL_AddACE(struct aclpb_ACEEntry* param0, struct emptypb_Empty* param1);
extern void acl_ACL_DeleteACE(struct commonpb_Name* param0, struct emptypb_Empty* param1);
extern void acl_ACL_UpdateACE(struct aclpb_ACEEntry* param0, struct emptypb_Empty* param1);
extern void acl_ACL_GetBindingList(struct emptypb_Empty* param0, struct aclpb_BindingList* param1);
extern void acl_ACL_AddBinding(struct aclpb_BindingEntry* param0, struct emptypb_Empty* param1);
extern void acl_ACL_DeleteBinding(struct commonpb_Name* param0, struct emptypb_Empty* param1);
extern void acl_ACL_UpdateBinding(struct aclpb_BindingEntry* param0, struct emptypb_Empty* param1);
extern void acl_ACL_GetFlowMirroringList(struct emptypb_Empty* param0, struct aclpb_FlowMirroringList* param1);
extern void acl_ACL_AddFlowMirroring(struct aclpb_FlowMirroringEntry* param0, struct emptypb_Empty* param1);
extern void acl_ACL_DeleteFlowMirroring(struct commonpb_Name* param0, struct emptypb_Empty* param1);
extern void acl_ACL_UpdateFlowMirroring(struct aclpb_FlowMirroringEntry* param0, struct emptypb_Empty* param1);
extern void cdp_CDP_GetConfig(struct emptypb_Empty* param0, struct cdppb_Config* param1);
extern void cdp_CDP_SetConfig(struct cdppb_Config* param0, struct emptypb_Empty* param1);
extern void cdp_CDP_GetLocalInfo(struct emptypb_Empty* param0, struct cdppb_LocalInfo* param1);
extern void cdp_CDP_GetNeighborInfo(struct emptypb_Empty* param0, struct cdppb_NeighborInfo* param1);
extern void cdp_CDP_GetStatistic(struct emptypb_Empty* param0, struct cdppb_Statistic* param1);
extern void cdp_CDP_RunClearStatistic(struct devicepb_PortList* param0, struct emptypb_Empty* param1);
extern void dhcp_ARPInspection_GetConfig(struct emptypb_Empty* param0, struct dhcppb_ARPInspectionConfig* param1);
extern void dhcp_ARPInspection_SetConfig(struct dhcppb_ARPInspectionConfig* param0, struct emptypb_Empty* param1);
extern void dhcp_DHCP_GetRelayConfig(struct emptypb_Empty* param0, struct dhcppb_RelayConfig* param1);
extern void dhcp_DHCP_GetSnoopingConfig(struct emptypb_Empty* param0, struct dhcppb_SnoopingConfig* param1);
extern void dhcp_DHCP_SetRelayConfig(struct dhcppb_RelayConfig* param0, struct emptypb_Empty* param1);
extern void dhcp_DHCP_SetSnoopingConfig(struct dhcppb_SnoopingConfig* param0, struct emptypb_Empty* param1);
extern void dhcp_DHCP_RunUnblockPort(struct devicepb_InterfaceIdentify* param0, struct emptypb_Empty* param1);
extern void dhcp_DHCP_GetSnoopingStatistic(struct emptypb_Empty* param0, struct dhcppb_SnoopingStatisticsList* param1);
extern void dhcp_DHCP_GetSnoopingBindingDatabase(struct emptypb_Empty* param0, struct dhcppb_SnoopingBindingDatabaseList* param1);
extern void dhcp_DHCP_ClearSnoopingStatistic(struct emptypb_Empty* param0, struct emptypb_Empty* param1);
extern void dhcp_DHCP_ClearSnoopingBindingDatabase(struct emptypb_Empty* param0, struct emptypb_Empty* param1);
extern void dhcpserver_DHCPServer_GetV4Config(struct emptypb_Empty* param0, struct dhcpserverpb_V4Config* param1);
extern void dhcpserver_DHCPServer_SetV4System(struct dhcpserverpb_System* param0, struct emptypb_Empty* param1);
extern void dhcpserver_DHCPServer_AddV4Basic(struct dhcpserverpb_Pool* param0, struct emptypb_Empty* param1);
extern void dhcpserver_DHCPServer_UpdateV4Basic(struct dhcpserverpb_Pool* param0, struct emptypb_Empty* param1);
extern void dhcpserver_DHCPServer_DeleteV4Basic(struct dhcpserverpb_Pool* param0, struct emptypb_Empty* param1);
extern void dhcpserver_DHCPServer_GetV4Status(struct emptypb_Empty* param0, struct dhcpserverpb_Status* param1);
extern void dhcpserver_DHCPServer_GetV4MACBased(struct emptypb_Empty* param0, struct dhcpserverpb_Pool* param1);
extern void dhcpserver_DHCPServer_AddV4MACBased(struct dhcpserverpb_Pool* param0, struct emptypb_Empty* param1);
extern void dhcpserver_DHCPServer_DeleteV4MACBased(struct dhcpserverpb_Pool* param0, struct emptypb_Empty* param1);
extern void dhcpserver_DHCPServer_UpdateV4MACBased(struct dhcpserverpb_Pool* param0, struct emptypb_Empty* param1);
extern void dhcpserver_DHCPServer_GetV4PortBased(struct emptypb_Empty* param0, struct dhcpserverpb_Pool* param1);
extern void dhcpserver_DHCPServer_UpdateV4PortBased(struct dhcpserverpb_Pool* param0, struct emptypb_Empty* param1);
extern void diagnostic_Diagnostic_RunPingTest(struct commonpb_IPAddress* param0, struct commonpb_Reply* param1);
extern void diagnostic_Diagnostic_RunTraceRoute(struct commonpb_IPAddress* param0, struct commonpb_Reply* param1);
extern void diagnostic_Diagnostic_RunDNSLookup(struct commonpb_Name* param0, struct commonpb_Reply* param1);
extern void diagnostic_Diagnostic_GetARPTable(struct emptypb_Empty* param0, struct diagnosticpb_ARPTables* param1);
extern void fdb_FDB_GetConfig(struct emptypb_Empty* param0, struct fdbpb_Config* param1);
extern void fdb_FDB_GetMACAgingTime(struct emptypb_Empty* param0, struct fdbpb_AgingTime* param1);
extern void fdb_FDB_SetMACAgingTime(struct fdbpb_AgingTime* param0, struct emptypb_Empty* param1);
extern void fdb_FDB_GetFDBForwardTable(struct emptypb_Empty* param0, struct fdbpb_ForwardConfig* param1);
extern void fdb_FDB_AddForwardMACAddress(struct fdbpb_ForwardConfig* param0, struct emptypb_Empty* param1);
extern void fdb_FDB_DeleteForwardMACAddress(struct fdbpb_ForwardConfig* param0, struct emptypb_Empty* param1);
extern void fdb_FDB_UpdateForwardMACAddress(struct fdbpb_ForwardConfig* param0, struct emptypb_Empty* param1);
extern void fdb_FDB_GetFDBDropTable(struct emptypb_Empty* param0, struct fdbpb_DropConfig* param1);
extern void fdb_FDB_AddDropMACAddress(struct fdbpb_DropConfig* param0, struct emptypb_Empty* param1);
extern void fdb_FDB_DeleteDropMACAddress(struct fdbpb_DropConfig* param0, struct emptypb_Empty* param1);
extern void fdb_FDB_UpdateDropMACAddress(struct fdbpb_DropConfig* param0, struct emptypb_Empty* param1);
extern void fdb_FDB_UpdatePortLearningLimit(struct fdbpb_PortLearningLimit* param0, struct emptypb_Empty* param1);
extern void fdb_FDB_GetInfo(struct emptypb_Empty* param0, struct fdbpb_Info* param1);
extern void fdb_FDB_GetTable(struct emptypb_Empty* param0, struct fdbpb_Status* param1);
extern void fdb_FDB_GetAuthorizedTable(struct emptypb_Empty* param0, struct fdbpb_Status* param1);
extern void fdb_FDB_GetSecurityTable(struct emptypb_Empty* param0, struct fdbpb_Status* param1);
extern void fdb_FDB_GetSpecificTable(struct fdbpb_SpecificMac* param0, struct fdbpb_Status* param1);
extern void fdb_FDB_RunClearMACTable(struct emptypb_Empty* param0, struct emptypb_Empty* param1);
extern void fdb_FDB_RunClearMACTableForInterface(struct fdbpb_FlushOption* param0, struct emptypb_Empty* param1);
extern void fdb_FDB_AddEntry(struct eventpb_FDBEntry* param0, struct emptypb_Empty* param1);
extern void fdb_FDB_DeleteEntry(struct eventpb_FDBEntry* param0, struct emptypb_Empty* param1);
extern void fdb_FDB_UpdateEntry(struct eventpb_FDBEntry* param0, struct emptypb_Empty* param1);
extern void fdb_FDB_UpdatePortOccupied(struct fdbpb_PortOccupied* param0, struct emptypb_Empty* param1);
extern void fdb_FDB_AddMulticastEntry(struct eventpb_FDBEntry* param0, struct emptypb_Empty* param1);
extern void fdb_FDB_DeleteMulticastEntry(struct eventpb_FDBEntry* param0, struct emptypb_Empty* param1);
extern void fdb_FDB_UpdateMulticastEntry(struct eventpb_FDBEntry* param0, struct emptypb_Empty* param1);
extern void files_Files_GetConfig(struct emptypb_Empty* param0, struct filespb_Config* param1);
extern void files_Files_GetFTPServerEnabled(struct emptypb_Empty* param0, struct commonpb_Enabled* param1);
extern void files_Files_SetFTPServerEnabled(struct commonpb_Enabled* param0, struct emptypb_Empty* param1);
extern void files_Files_GetActivateCertificate(struct emptypb_Empty* param0, struct filespb_ActivateCertificate* param1);
extern void files_Files_SetActivateCertificateForWeb(struct filespb_CertificateID* param0, struct emptypb_Empty* param1);
extern void files_Files_SetActivateCertificateForSNMP(struct filespb_CertificateID* param0, struct emptypb_Empty* param1);
extern void files_Files_AddActivateCertificateForSNMPManager(struct filespb_CertificateUserID* param0, struct emptypb_Empty* param1);
extern void files_Files_DeleteActivateCertificateForSNMPManager(struct filespb_CertificateUserID* param0, struct emptypb_Empty* param1);
extern void files_Files_UpdateActivateCertificateForSNMPManager(struct filespb_CertificateUserID* param0, struct emptypb_Empty* param1);
extern void files_Files_RunImportCertificate(struct filespb_CertificateData* param0, struct emptypb_Empty* param1);
extern void files_Files_RunExportCertificate(struct filespb_CertificateData* param0, struct emptypb_Empty* param1);
extern void files_Files_RunRemoveCertificate(struct filespb_CertificateID* param0, struct emptypb_Empty* param1);
extern void files_Files_GetCertificateList(struct emptypb_Empty* param0, struct filespb_CertificateIDList* param1);
extern void files_Files_GetActivateCertificateInfo(struct filespb_CertificateType* param0, struct filespb_CertificateInfo* param1);
extern void gvrp_GVRP_GetConfig(struct emptypb_Empty* param0, struct gvrppb_Config* param1);
extern void gvrp_GVRP_SetGVRPEnabled(struct commonpb_Enabled* param0, struct emptypb_Empty* param1);
extern void gvrp_GVRP_GetGVRPEnabled(struct emptypb_Empty* param0, struct commonpb_Enabled* param1);
extern void gvrp_GVRP_GetPortsConfig(struct emptypb_Empty* param0, struct gvrppb_PortsConfig* param1);
extern void gvrp_GVRP_UpdatePortsConfig(struct gvrppb_PortsConfig* param0, struct emptypb_Empty* param1);
extern void gvrp_GVRP_UpdatePortConfigEntry(struct gvrppb_PortConfigEntry* param0, struct emptypb_Empty* param1);
extern void isolation_Isolation_GetConfig(struct emptypb_Empty* param0, struct isolationpb_Config* param1);
extern void isolation_Isolation_SetAllowOutgoingConfig(struct isolationpb_ConfigEntry* param0, struct emptypb_Empty* param1);
extern void lacp_LACP_GetConfig(struct emptypb_Empty* param0, struct lacppb_Config* param1);
extern void lacp_LACP_SetSystem(struct lacppb_SystemConfig* param0, struct emptypb_Empty* param1);
extern void lacp_LACP_GetSystem(struct emptypb_Empty* param0, struct lacppb_SystemConfig* param1);
extern void lacp_LACP_SetTrunk(struct lacppb_LAGConfig* param0, struct emptypb_Empty* param1);
extern void lacp_LACP_GetTrunk(struct devicepb_InterfaceIdentify* param0, struct lacppb_LAGConfigEntry* param1);
extern void lacp_LACP_GetPortStatus(struct emptypb_Empty* param0, struct lacppb_Status* param1);
extern void lldp_LLDP_GetConfig(struct emptypb_Empty* param0, struct lldppb_Config* param1);
extern void lldp_LLDP_SetConfig(struct lldppb_Config* param0, struct emptypb_Empty* param1);
extern void lldp_LLDP_SetSystem(struct lldppb_SystemConfig* param0, struct emptypb_Empty* param1);
extern void lldp_LLDP_GetSystem(struct emptypb_Empty* param0, struct lldppb_SystemConfig* param1);
extern void lldp_LLDP_SetPortConfig(struct lldppb_PortConfig* param0, struct emptypb_Empty* param1);
extern void lldp_LLDP_GetPortConfig(struct emptypb_Empty* param0, struct lldppb_PortConfig* param1);
extern void lldp_LLDP_GetLocalInfo(struct emptypb_Empty* param0, struct lldppb_LocalInfo* param1);
extern void lldp_LLDP_GetNeighborInfo(struct emptypb_Empty* param0, struct lldppb_NeighborInfo* param1);
extern void lldp_LLDP_GetStatistic(struct emptypb_Empty* param0, struct lldppb_Statistic* param1);
extern void lldp_LLDP_RunClearStatistic(struct devicepb_PortList* param0, struct emptypb_Empty* param1);
extern void loop_Loop_GetStatus(struct emptypb_Empty* param0, struct looppb_Status* param1);
extern void loop_Loop_GetConfig(struct emptypb_Empty* param0, struct looppb_Config* param1);
extern void loop_Loop_GetPortConfig(struct emptypb_Empty* param0, struct looppb_PortConfig* param1);
extern void loop_Loop_UpdatePortConfig(struct looppb_PortConfigEntry* param0, struct emptypb_Empty* param1);
extern void maintenance_Maintenance_RunRebootDevice(struct commonpb_Confirm* param0, struct emptypb_Empty* param1);
extern void maintenance_Maintenance_RunCreateSnapshot(struct commonpb_ExportPathRequest* param0, struct emptypb_Empty* param1);
extern void maintenance_Maintenance_GetCurrentFirmware(struct emptypb_Empty* param0, struct maintenancepb_FirmwareInfo* param1);
extern void maintenance_Maintenance_GetPreviousFirmware(struct emptypb_Empty* param0, struct maintenancepb_FirmwareInfo* param1);
extern void maintenance_Maintenance_RunGotoPreviousFirmware(struct commonpb_Confirm* param0, struct emptypb_Empty* param1);
extern void maintenance_Maintenance_RunUpgradeFirmware(struct maintenancepb_UpgradePathRequest* param0, struct emptypb_Empty* param1);
extern void mirroring_Mirroring_GetConfig(struct emptypb_Empty* param0, struct mirroringpb_Config* param1);
extern void mirroring_Mirroring_GetRSPAN(struct emptypb_Empty* param0, struct mirroringpb_RSPANConfig* param1);
extern void mirroring_Mirroring_SetRSPAN(struct mirroringpb_RSPANConfig* param0, struct emptypb_Empty* param1);
extern void mirroring_Mirroring_GetDestinationList(struct emptypb_Empty* param0, struct mirroringpb_DestinationSession* param1);
extern void mirroring_Mirroring_AddDestination(struct mirroringpb_DestinationSessionEntry* param0, struct emptypb_Empty* param1);
extern void mirroring_Mirroring_DeleteDestination(struct commonpb_Index* param0, struct emptypb_Empty* param1);
extern void mirroring_Mirroring_UpdateDestination(struct mirroringpb_DestinationSessionEntry* param0, struct emptypb_Empty* param1);
extern void mirroring_Mirroring_GetSourceList(struct emptypb_Empty* param0, struct mirroringpb_SourceSession* param1);
extern void mirroring_Mirroring_AddSource(struct mirroringpb_SourceSessionEntry* param0, struct emptypb_Empty* param1);
extern void mirroring_Mirroring_DeleteSource(struct mirroringpb_SourceSessionEntry* param0, struct emptypb_Empty* param1);
extern void mirroring_Mirroring_UpdateSource(struct mirroringpb_SourceSessionEntry* param0, struct emptypb_Empty* param1);
extern void monitor_Monitor_GetConfig(struct emptypb_Empty* param0, struct monitorpb_Config* param1);
extern void monitor_Monitor_GetDeviceLimitConfig(struct emptypb_Empty* param0, struct monitorpb_DeviceLimitConfig* param1);
extern void monitor_Monitor_UpdateDeviceScorllBarValueEntry(struct monitorpb_DeviceScorllBarValueEntry* param0, struct emptypb_Empty* param1);
extern void monitor_Monitor_UpdateDeviceScorllBarValue(struct monitorpb_DeviceScorllBarValue* param0, struct emptypb_Empty* param1);
extern void monitor_Monitor_GetSystemLimitConfig(struct emptypb_Empty* param0, struct monitorpb_SystemLimitConfig* param1);
extern void monitor_Monitor_UpdateSystemScorllBarValueEntry(struct monitorpb_SystemScorllBarValueEntry* param0, struct emptypb_Empty* param1);
extern void monitor_Monitor_UpdateSystemScorllBarValue(struct monitorpb_SystemScorllBarValue* param0, struct emptypb_Empty* param1);
extern void monitor_Monitor_GetStatus(struct emptypb_Empty* param0, struct monitorpb_Status* param1);
extern void monitor_Monitor_GetDeviceStatus(struct emptypb_Empty* param0, struct monitorpb_DeviceStatus* param1);
extern void monitor_Monitor_GetSystemStatus(struct emptypb_Empty* param0, struct monitorpb_SystemStatus* param1);
extern void monitor_Monitor_GetLEDStatus(struct emptypb_Empty* param0, struct monitorpb_LEDStatus* param1);
extern void multicast_Multicast_GetConfig(struct emptypb_Empty* param0, struct multicastpb_Config* param1);
extern void multicast_Multicast_SetIGMPSnoopingEnabled(struct commonpb_Enabled* param0, struct emptypb_Empty* param1);
extern void multicast_Multicast_SetMLDSnoopingEnabled(struct commonpb_Enabled* param0, struct emptypb_Empty* param1);
extern void multicast_Multicast_GetIGMPSnoopingConfig(struct multicastpb_VlanList* param0, struct multicastpb_Snooping* param1);
extern void multicast_Multicast_SetIGMPSnoopingConfig(struct multicastpb_Snooping* param0, struct emptypb_Empty* param1);
extern void multicast_Multicast_GetMLDSnoopingConfig(struct multicastpb_VlanList* param0, struct multicastpb_Snooping* param1);
extern void multicast_Multicast_SetMLDSnoopingConfig(struct multicastpb_Snooping* param0, struct emptypb_Empty* param1);
extern void multicast_Multicast_GetStaticGroupConfig(struct multicastpb_VlanList* param0, struct multicastpb_Static* param1);
extern void multicast_Multicast_UpdateStaticGroupConfig(struct multicastpb_Static* param0, struct emptypb_Empty* param1);
extern void multicast_Multicast_AddStaticGroupConfig(struct multicastpb_Static* param0, struct emptypb_Empty* param1);
extern void multicast_Multicast_DeleteStaticGroupConfig(struct multicastpb_Static* param0, struct emptypb_Empty* param1);
extern void multicast_Multicast_GetUnregisterFloodingConfig(struct multicastpb_VlanList* param0, struct multicastpb_UnregisterFlood* param1);
extern void multicast_Multicast_SetUnregisterFloodingConfig(struct multicastpb_UnregisterFlood* param0, struct emptypb_Empty* param1);
extern void multicast_Multicast_GetRouterPortStatus(struct multicastpb_VlanList* param0, struct multicastpb_RouterStatus* param1);
extern void multicast_Multicast_SetRouterPortConfig(struct multicastpb_RouterPort* param0, struct emptypb_Empty* param1);
extern void multicast_Multicast_GetRouterPortConfig(struct multicastpb_VlanList* param0, struct multicastpb_RouterPort* param1);
extern void multicast_Multicast_GetIGMPGroups(struct multicastpb_VlanList* param0, struct multicastpb_DynamicGroups* param1);
extern void multicast_Multicast_GetMLDGroups(struct multicastpb_VlanList* param0, struct multicastpb_DynamicGroups* param1);
extern void multicast_Multicast_GetIGMPStatistics(struct multicastpb_VlanList* param0, struct multicastpb_IGMPStatistics* param1);
extern void multicast_Multicast_GetMLDStatistics(struct multicastpb_VlanList* param0, struct multicastpb_MLDStatistics* param1);
extern void network_Network_GetConfig(struct emptypb_Empty* param0, struct networkpb_Config* param1);
extern void network_Network_GetBasicConfig(struct emptypb_Empty* param0, struct networkpb_BasicConfig* param1);
extern void network_Network_SetBasicConfig(struct networkpb_BasicConfig* param0, struct emptypb_Empty* param1);
extern void network_Network_GetIPConfig(struct emptypb_Empty* param0, struct networkpb_IPConfig* param1);
extern void network_Network_GetIPv4Config(struct emptypb_Empty* param0, struct networkpb_IPv4Config* param1);
extern void network_Network_SetIPv4Config(struct networkpb_IPv4Config* param0, struct emptypb_Empty* param1);
extern void network_Network_GetIPv6Config(struct emptypb_Empty* param0, struct networkpb_IPv6Config* param1);
extern void network_Network_SetIPv6Config(struct networkpb_IPv6Config* param0, struct emptypb_Empty* param1);
extern void network_Network_GetV4Status(struct emptypb_Empty* param0, struct networkpb_IPv4Status* param1);
extern void network_Network_GetV6Status(struct emptypb_Empty* param0, struct networkpb_IPv6Status* param1);
extern void network_Network_GetIPv6Address(struct emptypb_Empty* param0, struct commonpb_IPv6List* param1);
extern void network_Network_GetIPv4Address(struct emptypb_Empty* param0, struct commonpb_IPAddress* param1);
extern void poe_PoE_GetConfig(struct emptypb_Empty* param0, struct poepb_Config* param1);
extern void poe_PoE_UpdatePortConfig(struct poepb_PortConfig* param0, struct emptypb_Empty* param1);
extern void poe_PoE_RunRestartPoEPort(struct devicepb_PortList* param0, struct emptypb_Empty* param1);
extern void poe_PoE_SetPoEMaxPowerAvailable(struct poepb_SystemBudget* param0, struct emptypb_Empty* param1);
extern void poe_PoE_GetPortStatus(struct devicepb_PortList* param0, struct poepb_PortStatus* param1);
extern void poe_PoE_GetSystemStatus(struct emptypb_Empty* param0, struct poepb_SystemStatus* param1);
extern void port_Port_GetConfig(struct emptypb_Empty* param0, struct portpb_Config* param1);
extern void port_Port_UpdateAliasConfig(struct portpb_AliasConfig* param0, struct emptypb_Empty* param1);
extern void port_Port_UpdateOperationConfig(struct portpb_OperationConfig* param0, struct emptypb_Empty* param1);
extern void port_Port_UpdateSpeedDuplexConfig(struct portpb_SpeedDuplexConfig* param0, struct emptypb_Empty* param1);
extern void port_Port_UpdateFlowControlConfig(struct portpb_FlowControlConfig* param0, struct emptypb_Empty* param1);
extern void port_Port_UpdateEnergyEfficiencyConfig(struct portpb_EnergyEfficiencyConfig* param0, struct emptypb_Empty* param1);
extern void port_Port_GetStatus(struct emptypb_Empty* param0, struct portpb_Status* param1);
extern void port_Port_RunRestartPorts(struct devicepb_PortList* param0, struct emptypb_Empty* param1);
extern void port_Port_GetLgStatus(struct emptypb_Empty* param0, struct portpb_LgPortStatus* param1);
extern void port_Port_RunEnablePort(struct portpb_OperationEntry* param0, struct emptypb_Empty* param1);
extern void port_Port_GetPortStatus(struct devicepb_InterfaceIdentify* param0, struct portpb_StatusEntry* param1);
extern void port_Port_GetLgPortStatus(struct devicepb_InterfaceIdentify* param0, struct portpb_LgPortStatusEntry* param1);
extern void portauthentication_PortAuthentication_GetConfig(struct emptypb_Empty* param0, struct portauthenticationpb_Config* param1);
extern void portauthentication_PortAuthentication_GetSystemConfig(struct emptypb_Empty* param0, struct portauthenticationpb_SystemConfig* param1);
extern void portauthentication_PortAuthentication_SetSystemConfig(struct portauthenticationpb_SystemConfig* param0, struct emptypb_Empty* param1);
extern void portauthentication_PortAuthentication_GetPortConfig(struct emptypb_Empty* param0, struct portauthenticationpb_PortConfig* param1);
extern void portauthentication_PortAuthentication_UpdatePortConfig(struct portauthenticationpb_PortConfig* param0, struct emptypb_Empty* param1);
extern void portauthentication_PortAuthentication_GetAuthorizedMACsConfig(struct emptypb_Empty* param0, struct portauthenticationpb_AuthorizedMACs* param1);
extern void portauthentication_PortAuthentication_AddAuthorizedMACsEntryConfig(struct portauthenticationpb_AuthorizedMACsEntry* param0, struct emptypb_Empty* param1);
extern void portauthentication_PortAuthentication_DeleteAuthorizedMACsEntryConfig(struct commonpb_Name* param0, struct emptypb_Empty* param1);
extern void portauthentication_PortAuthentication_UpdateAuthorizedMACsEntryConfig(struct portauthenticationpb_AuthorizedMACsEntry* param0, struct emptypb_Empty* param1);
extern void portauthentication_PortAuthentication_GetPortStatus(struct emptypb_Empty* param0, struct portauthenticationpb_PortStatus* param1);
extern void portauthentication_PortAuthentication_GetMACAuthorizationStatus(struct emptypb_Empty* param0, struct portauthenticationpb_PortAuthorizationStatus* param1);
extern void portauthentication_PortAuthentication_Get8021XAuthorizationStatus(struct emptypb_Empty* param0, struct portauthenticationpb_PortAuthorizationStatus* param1);
extern void portauthentication_PortAuthentication_GetUserStatus(struct emptypb_Empty* param0, struct portauthenticationpb_UserStatus* param1);
extern void portauthentication_PortAuthentication_RunPortConfigLearnMACNow(struct portauthenticationpb_LearnMACNowEntry* param0, struct emptypb_Empty* param1);
extern void portauthentication_PortAuthentication_RunPortConfigReauthenticate(struct devicepb_InterfaceIdentify* param0, struct emptypb_Empty* param1);
extern void portauthentication_PortAuthentication_RunPortConfigUnauthorizeMAC(struct portauthenticationpb_UnauthorizeMACEntry* param0, struct emptypb_Empty* param1);
extern void portauthentication_PortAuthentication_SetAuthenticationServers(struct accesspb_AuthenticationServersConfig* param0, struct emptypb_Empty* param1);
extern void portsecurity_PortSecurity_GetConfig(struct emptypb_Empty* param0, struct portsecuritypb_Config* param1);
extern void portsecurity_PortSecurity_UpdatePortSecurityConfig(struct portsecuritypb_PortSecurityConfigEntry* param0, struct emptypb_Empty* param1);
extern void portsecurity_PortSecurity_AddPortSecureEntry(struct portsecuritypb_PortSecureEntry* param0, struct emptypb_Empty* param1);
extern void portsecurity_PortSecurity_DeletePortSecureEntry(struct portsecuritypb_PortSecureEntry* param0, struct emptypb_Empty* param1);
extern void portsecurity_PortSecurity_GetPortSecurityInfo(struct emptypb_Empty* param0, struct portsecuritypb_Status* param1);
extern void ptp_PTP_GetConfig(struct emptypb_Empty* param0, struct ptppb_Config* param1);
extern void ptp_PTP_SetConfig(struct ptppb_Config* param0, struct emptypb_Empty* param1);
extern void ptp_PTP_GetStatus(struct emptypb_Empty* param0, struct ptppb_Status* param1);
extern void ptp_PTP_GetClockStatus(struct emptypb_Empty* param0, struct ptppb_ClockStatus* param1);
extern void ptp_PTP_GetTimeStatus(struct emptypb_Empty* param0, struct ptppb_TimeStatus* param1);
extern void qos_QoS_GetMode(struct emptypb_Empty* param0, struct qospb_Mode* param1);
extern void qos_QoS_SetMode(struct qospb_Mode* param0, struct emptypb_Empty* param1);
extern void qos_QoS_GetTrustMode(struct emptypb_Empty* param0, struct qospb_TrustMode* param1);
extern void qos_QoS_SetTrustMode(struct qospb_TrustMode* param0, struct emptypb_Empty* param1);
extern void qos_QoS_GetQueueList(struct emptypb_Empty* param0, struct qospb_QueueList* param1);
extern void qos_QoS_SetAllQueueListPriorityScheme(struct qospb_PriorityScheme* param0, struct emptypb_Empty* param1);
extern void qos_QoS_UpdateQueueEntry(struct qospb_WeightedFairTrafficRatioQueueEntry* param0, struct emptypb_Empty* param1);
extern void qos_QoS_UpdateQueueList(struct qospb_QueueList* param0, struct emptypb_Empty* param1);
extern void qos_QoS_GetCoSList(struct emptypb_Empty* param0, struct qospb_CoSList* param1);
extern void qos_QoS_UpdateCoSEntry(struct qospb_MappingCoSDot1PToQueueEntry* param0, struct emptypb_Empty* param1);
extern void qos_QoS_UpdateCoSList(struct qospb_CoSList* param0, struct emptypb_Empty* param1);
extern void qos_QoS_GetDSCPList(struct emptypb_Empty* param0, struct qospb_DSCPList* param1);
extern void qos_QoS_UpdateDSCPEntry(struct qospb_MappingDSCPToQueueEntry* param0, struct emptypb_Empty* param1);
extern void qos_QoS_UpdateDSCPList(struct qospb_DSCPList* param0, struct emptypb_Empty* param1);
extern void qos_QoS_GetInterfaceList(struct emptypb_Empty* param0, struct qospb_InterfaceList* param1);
extern void qos_QoS_UpdateInterfaceEntry(struct qospb_InterfaceConfigEntry* param0, struct emptypb_Empty* param1);
extern void qos_QoS_UpdateInterfaceList(struct qospb_InterfaceList* param0, struct emptypb_Empty* param1);
extern void rmon_RMON_RunClearAllCounter(struct emptypb_Empty* param0, struct emptypb_Empty* param1);
extern void rmon_RMON_GetIngress(struct devicepb_PortList* param0, struct rmonpb_Ingress* param1);
extern void rmon_RMON_GetEgress(struct devicepb_PortList* param0, struct rmonpb_Egress* param1);
extern void rmon_RMON_GetHistogram(struct devicepb_PortList* param0, struct rmonpb_Histogram* param1);
extern void rmon_RMON_GetUtilization(struct devicepb_PortList* param0, struct rmonpb_Utilization* param1);
extern void sfp_SFP_GetConfig(struct emptypb_Empty* param0, struct sfppb_Config* param1);
extern void sfp_SFP_SetConfig(struct sfppb_Config* param0, struct emptypb_Empty* param1);
extern void sfp_SFP_GetStatus(struct emptypb_Empty* param0, struct sfppb_Info* param1);
extern void stormcontrol_StormControl_GetConfig(struct emptypb_Empty* param0, struct stormcontrolpb_Config* param1);
extern void stormcontrol_StormControl_SetEnabled(struct commonpb_Enabled* param0, struct emptypb_Empty* param1);
extern void stormcontrol_StormControl_GetEnabled(struct emptypb_Empty* param0, struct commonpb_Enabled* param1);
extern void stormcontrol_StormControl_GetPortConfig(struct emptypb_Empty* param0, struct stormcontrolpb_PortConfig* param1);
extern void stormcontrol_StormControl_UpdatePortConfigEntry(struct stormcontrolpb_PortConfigEntry* param0, struct emptypb_Empty* param1);
extern void stormcontrol_StormControl_UpdatePortConfig(struct stormcontrolpb_PortConfig* param0, struct emptypb_Empty* param1);
extern void stp_MSTP_GetConfig(struct emptypb_Empty* param0, struct stppb_MSTPConfig* param1);
extern void stp_MSTP_SetConfig(struct stppb_MSTPConfig* param0, struct emptypb_Empty* param1);
extern void stp_MSTP_SetCistConfig(struct stppb_CISTEntry* param0, struct emptypb_Empty* param1);
extern void stp_MSTP_SetMstiConfig(struct stppb_MSTIList* param0, struct emptypb_Empty* param1);
extern void stp_MSTP_GetCistStatus(struct emptypb_Empty* param0, struct stppb_CISTStatus* param1);
extern void stp_MSTP_GetMstiStatus(struct emptypb_Empty* param0, struct stppb_MSTIStatus* param1);
extern void stp_MSTP_RunReconfigPortState(struct emptypb_Empty* param0, struct emptypb_Empty* param1);
extern void stp_MSTP_GetBridgeConfigMode(struct emptypb_Empty* param0, struct stppb_BridgeConfigMode* param1);
extern void stp_MSTP_SetBridgeConfigMode(struct stppb_BridgeConfigMode* param0, struct emptypb_Empty* param1);
extern void stp_MSTP_GetBridgeConfigPriority(struct emptypb_Empty* param0, struct stppb_BridgeConfigPriority* param1);
extern void stp_MSTP_SetBridgeConfigPriority(struct stppb_BridgeConfigPriority* param0, struct emptypb_Empty* param1);
extern void stp_MSTP_GetBridgeConfigHelloTime(struct emptypb_Empty* param0, struct stppb_BridgeConfigHelloTime* param1);
extern void stp_MSTP_SetBridgeConfigHelloTime(struct stppb_BridgeConfigHelloTime* param0, struct emptypb_Empty* param1);
extern void stp_MSTP_GetBridgeConfigMaxAge(struct emptypb_Empty* param0, struct stppb_BridgeConfigMaxAge* param1);
extern void stp_MSTP_SetBridgeConfigMaxAge(struct stppb_BridgeConfigMaxAge* param0, struct emptypb_Empty* param1);
extern void stp_MSTP_GetBridgeConfigForwardDelay(struct emptypb_Empty* param0, struct stppb_BridgeConfigForwardDelay* param1);
extern void stp_MSTP_SetBridgeConfigForwardDelay(struct stppb_BridgeConfigForwardDelay* param0, struct emptypb_Empty* param1);
extern void stp_MSTP_GetBridgeConfigTxHoldCount(struct emptypb_Empty* param0, struct stppb_BridgeConfigTxHoldCount* param1);
extern void stp_MSTP_SetBridgeConfigTxHoldCount(struct stppb_BridgeConfigTxHoldCount* param0, struct emptypb_Empty* param1);
extern void stp_MSTP_GetBridgeConfigMSTPRegionName(struct emptypb_Empty* param0, struct stppb_BridgeConfigMSTPRegionName* param1);
extern void stp_MSTP_SetBridgeConfigMSTPRegionName(struct stppb_BridgeConfigMSTPRegionName* param0, struct emptypb_Empty* param1);
extern void stp_MSTP_GetBridgeConfigMSTPRevisionLevel(struct emptypb_Empty* param0, struct stppb_BridgeConfigMSTPRevisionLevel* param1);
extern void stp_MSTP_SetBridgeConfigMSTPRevisionLevel(struct stppb_BridgeConfigMSTPRevisionLevel* param0, struct emptypb_Empty* param1);
extern void stp_MSTP_GetBridgeConfigMSTPMaxHops(struct emptypb_Empty* param0, struct stppb_BridgeConfigMSTPMaxHops* param1);
extern void stp_MSTP_SetBridgeConfigMSTPMaxHops(struct stppb_BridgeConfigMSTPMaxHops* param0, struct emptypb_Empty* param1);
extern void stp_MSTP_GetPortConfigEnabled(struct devicepb_PortList* param0, struct stppb_STPPortConfigEnabled* param1);
extern void stp_MSTP_SetPortConfigEnabled(struct stppb_STPPortConfigEnabled* param0, struct emptypb_Empty* param1);
extern void stp_MSTP_GetPortConfigPriority(struct devicepb_PortList* param0, struct stppb_STPPortConfigPriority* param1);
extern void stp_MSTP_SetPortConfigPriority(struct stppb_STPPortConfigPriority* param0, struct emptypb_Empty* param1);
extern void stp_MSTP_GetPortConfigAdminP2PPort(struct devicepb_PortList* param0, struct stppb_STPPortConfigAdminP2PPort* param1);
extern void stp_MSTP_SetPortConfigAdminP2PPort(struct stppb_STPPortConfigAdminP2PPort* param0, struct emptypb_Empty* param1);
extern void stp_MSTP_GetPortConfigAdminEdgePort(struct devicepb_PortList* param0, struct stppb_STPPortConfigAdminEdgePort* param1);
extern void stp_MSTP_SetPortConfigAdminEdgePort(struct stppb_STPPortConfigAdminEdgePort* param0, struct emptypb_Empty* param1);
extern void stp_MSTP_GetPortConfigAdminPathCost(struct devicepb_PortList* param0, struct stppb_STPPortConfigAdminPathCost* param1);
extern void stp_MSTP_SetPortConfigAdminPathCost(struct stppb_STPPortConfigAdminPathCost* param0, struct emptypb_Empty* param1);
extern void stp_MSTP_GetPortConfigMSTPDefaultPriority(struct devicepb_PortList* param0, struct stppb_STPPortConfigMSTPDefaultPriority* param1);
extern void stp_MSTP_SetPortConfigMSTPDefaultPriority(struct stppb_STPPortConfigMSTPDefaultPriority* param0, struct emptypb_Empty* param1);
extern void stp_MSTP_GetPortConfigMSTPPortPriority(struct devicepb_PortList* param0, struct stppb_STPPortConfigMSTPPortPriority* param1);
extern void stp_MSTP_SetPortConfigMSTPPortPriority(struct stppb_STPPortConfigMSTPPortPriority* param0, struct emptypb_Empty* param1);
extern void stp_MSTP_GetPortConfigMSTPDefaultAdminPathCost(struct devicepb_PortList* param0, struct stppb_STPPortConfigMSTPDefaultAdminPathCost* param1);
extern void stp_MSTP_SetPortConfigMSTPDefaultAdminPathCost(struct stppb_STPPortConfigMSTPDefaultAdminPathCost* param0, struct emptypb_Empty* param1);
extern void stp_MSTP_GetPortConfigMSTPPortAdminPathCost(struct devicepb_PortList* param0, struct stppb_STPPortConfigMSTPPortAdminPathCost* param1);
extern void stp_MSTP_SetPortConfigMSTPPortAdminPathCost(struct stppb_STPPortConfigMSTPPortAdminPathCost* param0, struct emptypb_Empty* param1);
extern void stp_MSTP_GetPortConfigBPDUGuard(struct devicepb_PortList* param0, struct stppb_STPPortConfigBPDUGuard* param1);
extern void stp_MSTP_SetPortConfigBPDUGuard(struct stppb_STPPortConfigBPDUGuard* param0, struct emptypb_Empty* param1);
extern void stp_MSTP_GetPortConfigBPDUReceiveOnly(struct devicepb_PortList* param0, struct stppb_STPPortConfigBPDUReceiveOnly* param1);
extern void stp_MSTP_SetPortConfigBPDUReceiveOnly(struct stppb_STPPortConfigBPDUReceiveOnly* param0, struct emptypb_Empty* param1);
extern void stp_MSTP_GetPortConfigRestrictTcn(struct devicepb_PortList* param0, struct stppb_STPPortConfigRestrictTcn* param1);
extern void stp_MSTP_SetPortConfigRestrictTcn(struct stppb_STPPortConfigRestrictTcn* param0, struct emptypb_Empty* param1);
extern void stp_MSTP_GetPortConfigRestrictRoot(struct devicepb_PortList* param0, struct stppb_STPPortConfigRestrictRoot* param1);
extern void stp_MSTP_SetPortConfigRestrictRoot(struct stppb_STPPortConfigRestrictRoot* param0, struct emptypb_Empty* param1);
extern void stp_MSTP_GetMSTPGroup(struct stppb_MSTPIDList* param0, struct stppb_MSTPGroup* param1);
extern void stp_MSTP_SetMSTPGroup(struct stppb_MSTPGroup* param0, struct emptypb_Empty* param1);
extern void stp_MSTP_DeleteMSTPGroup(struct stppb_MSTPIDList* param0, struct emptypb_Empty* param1);
extern void system_System_GetConfig(struct emptypb_Empty* param0, struct systempb_Config* param1);
extern void system_System_SetConfig(struct systempb_Config* param0, struct emptypb_Empty* param1);
extern void system_System_GetStatus(struct emptypb_Empty* param0, struct systempb_Status* param1);
extern void time_Time_GetConfig(struct emptypb_Empty* param0, struct timepb_Config* param1);
extern void time_Time_SetConfig(struct timepb_Config* param0, struct emptypb_Empty* param1);
extern void time_Time_GetStatus(struct emptypb_Empty* param0, struct timepb_Status* param1);
extern void time_Time_GetTimeDate(struct emptypb_Empty* param0, struct commonpb_DateTime* param1);
extern void time_Time_RunSyncNow(struct emptypb_Empty* param0, struct emptypb_Empty* param1);
extern void time_Time_RunListTimeZones(struct emptypb_Empty* param0, struct timepb_ListTimeZones* param1);
extern void time_Time_GetCorrectionTime(struct timepb_RequestWithTimestamp* param0, struct timepb_Response* param1);
extern void time_Time_GetCorrectionTimeWithInt64(struct timepb_RequestWithInt64* param0, struct timepb_Response* param1);
extern void time_Time_GetUTC(struct emptypb_Empty* param0, struct timepb_Response* param1);
extern void timerange_TimeRange_GetConfig(struct emptypb_Empty* param0, struct timerangepb_Config* param1);
extern void timerange_TimeRange_GetStatus(struct emptypb_Empty* param0, struct timerangepb_Status* param1);
extern void timerange_TimeRange_AddTimeRange(struct timerangepb_ConfigEntry* param0, struct emptypb_Empty* param1);
extern void timerange_TimeRange_DeleteTimeRange(struct commonpb_Name* param0, struct emptypb_Empty* param1);
extern void timerange_TimeRange_UpdateTimeRange(struct timerangepb_ConfigEntry* param0, struct emptypb_Empty* param1);
extern void timesync_TimeSync_SetGNSSConfig(struct timesyncpb_GNSSConfig* param0, struct emptypb_Empty* param1);
extern void timesync_TimeSync_GetGNSSConfig(struct emptypb_Empty* param0, struct timesyncpb_GNSSConfig* param1);
extern void timesync_TimeSync_GetGNSSStatus(struct emptypb_Empty* param0, struct timesyncpb_GNSStatus* param1);
extern void timesync_TimeSync_SetSyncEConfig(struct timesyncpb_SyncEConfig* param0, struct emptypb_Empty* param1);
extern void timesync_TimeSync_GetSyncEConfig(struct emptypb_Empty* param0, struct timesyncpb_SyncEConfig* param1);
extern void timesync_TimeSync_GetSyncEStatus(struct emptypb_Empty* param0, struct timesyncpb_SyncEStatus* param1);
extern void timesync_TimeSync_SetSyncSourceConfig(struct timesyncpb_SyncSourceConfig* param0, struct emptypb_Empty* param1);
extern void timesync_TimeSync_GetSyncSourceConfig(struct emptypb_Empty* param0, struct timesyncpb_SyncSourceConfig* param1);
extern void timesync_TimeSync_GetSyncSourceStatus(struct emptypb_Empty* param0, struct timesyncpb_SyncSourceStatus* param1);
extern void timesync_TimeSync_SetReferenceOutput(struct timesyncpb_ReferenceOutput* param0, struct emptypb_Empty* param1);
extern void timesync_TimeSync_GetReferenceOutput(struct emptypb_Empty* param0, struct timesyncpb_ReferenceOutput* param1);
extern void udld_UDLD_GetStatus(struct emptypb_Empty* param0, struct udldpb_Status* param1);
extern void udld_UDLD_RunRestorePortStatus(struct devicepb_PortList* param0, struct emptypb_Empty* param1);
extern void udld_UDLD_GetConfig(struct emptypb_Empty* param0, struct udldpb_Config* param1);
extern void udld_UDLD_GetBasicConfig(struct emptypb_Empty* param0, struct udldpb_BasicConfig* param1);
extern void udld_UDLD_UpdateBasicConfig(struct udldpb_BasicConfig* param0, struct emptypb_Empty* param1);
extern void udld_UDLD_GetPortConfig(struct emptypb_Empty* param0, struct udldpb_PortConfig* param1);
extern void udld_UDLD_UpdatePortConfig(struct udldpb_PortConfig* param0, struct emptypb_Empty* param1);
extern void udld_UDLD_UpdatePortConfigEntry(struct udldpb_PortConfigEntry* param0, struct emptypb_Empty* param1);
extern void udld_UDLD_GetStatistics(struct emptypb_Empty* param0, struct udldpb_Statistics* param1);
extern void udld_UDLD_RunClearStatistics(struct devicepb_PortList* param0, struct emptypb_Empty* param1);
extern void userinterface_UserInterface_GetConfig(struct emptypb_Empty* param0, struct userinterfacepb_Config* param1);
extern void userinterface_UserInterface_GetCLIConfig(struct emptypb_Empty* param0, struct userinterfacepb_CLIConfig* param1);
extern void userinterface_UserInterface_SetCLIConfig(struct userinterfacepb_CLIConfig* param0, struct emptypb_Empty* param1);
extern void userinterface_UserInterface_GetWebConfig(struct emptypb_Empty* param0, struct userinterfacepb_WebConfig* param1);
extern void userinterface_UserInterface_SetWebConfig(struct userinterfacepb_WebConfig* param0, struct emptypb_Empty* param1);
extern void userinterface_UserInterface_RunRestartWebServer(struct commonpb_Confirm* param0, struct emptypb_Empty* param1);
extern void userinterface_UserInterface_GetSNMPConfig(struct emptypb_Empty* param0, struct userinterfacepb_SNMPConfig* param1);
extern void userinterface_UserInterface_SetSNMPConfig(struct userinterfacepb_SNMPConfig* param0, struct emptypb_Empty* param1);
extern void userinterface_UserInterface_RunRestartSNMPServer(struct commonpb_Confirm* param0, struct emptypb_Empty* param1);
extern void vlan_VLAN_GetConfig(struct emptypb_Empty* param0, struct vlanpb_Config* param1);
extern void vlan_VLAN_GetStatus(struct vlanpb_Used* param0, struct vlanpb_StatusMapping* param1);
extern void vlan_VLAN_GetManagementConfig(struct emptypb_Empty* param0, struct vlanpb_ManagementConfig* param1);
extern void vlan_VLAN_UpdateManagementConfig(struct vlanpb_ManagementConfig* param0, struct emptypb_Empty* param1);
extern void vlan_VLAN_GetVoiceConfig(struct emptypb_Empty* param0, struct vlanpb_VoiceConfig* param1);
extern void vlan_VLAN_UpdateVoiceConfig(struct vlanpb_VoiceConfig* param0, struct emptypb_Empty* param1);
extern void vlan_VLAN_GetFiltersConfig(struct emptypb_Empty* param0, struct vlanpb_FiltersConfig* param1);
extern void vlan_VLAN_AddFilter(struct vlanpb_FilterEntry* param0, struct emptypb_Empty* param1);
extern void vlan_VLAN_UpdateFilter(struct vlanpb_FilterEntry* param0, struct emptypb_Empty* param1);
extern void vlan_VLAN_DeleteFilter(struct vlanpb_FilterEntry* param0, struct emptypb_Empty* param1);
extern void vlan_VLAN_GetPortsConfig(struct emptypb_Empty* param0, struct vlanpb_PortsConfig* param1);
extern void vlan_VLAN_UpdatePortsConfig(struct vlanpb_PortsConfig* param0, struct emptypb_Empty* param1);
extern void vlan_VLAN_GetMappingConfig(struct emptypb_Empty* param0, struct vlanpb_MappingConfig* param1);
extern void vlan_VLAN_AddMapping(struct vlanpb_MappingEntry* param0, struct emptypb_Empty* param1);
extern void vlan_VLAN_DeleteMapping(struct vlanpb_MappingEntry* param0, struct emptypb_Empty* param1);
extern void vlan_VLAN_UpdateMappingPortEntry(struct vlanpb_MappingPortEntry* param0, struct emptypb_Empty* param1);
extern void vlan_VLAN_GetSelectiveQinQConfig(struct emptypb_Empty* param0, struct vlanpb_SelectiveQinQConfig* param1);
extern void vlan_VLAN_AddSelectiveQinQ(struct vlanpb_SelectiveQinQTranslatedEntry* param0, struct emptypb_Empty* param1);
extern void vlan_VLAN_UpdateSelectiveQinQ(struct vlanpb_SelectiveQinQTranslatedEntry* param0, struct emptypb_Empty* param1);
extern void vlan_VLAN_DeleteSelectiveQinQ(struct vlanpb_SelectiveQinQTranslatedEntry* param0, struct emptypb_Empty* param1);
extern void vlan_VLAN_GetProtocolBasedConfig(struct emptypb_Empty* param0, struct vlanpb_ProtocolBasedConfig* param1);
extern void vlan_VLAN_AddProtocolBasedGroup(struct vlanpb_ProtocolBasedGroupEntry* param0, struct emptypb_Empty* param1);
extern void vlan_VLAN_UpdateProtocolBasedGroup(struct vlanpb_ProtocolBasedGroupEntry* param0, struct emptypb_Empty* param1);
extern void vlan_VLAN_DeleteProtocolBasedGroup(struct vlanpb_ProtocolBasedGroupEntry* param0, struct emptypb_Empty* param1);
extern void vlan_VLAN_AddProtocolBasedGroupMember(struct vlanpb_ProtocolBasedGroupMemberEntry* param0, struct emptypb_Empty* param1);
extern void vlan_VLAN_UpdateProtocolBasedGroupMember(struct vlanpb_ProtocolBasedGroupMemberEntry* param0, struct emptypb_Empty* param1);
extern void vlan_VLAN_DeleteProtocolBasedGroupMember(struct vlanpb_ProtocolBasedGroupMemberEntry* param0, struct emptypb_Empty* param1);
extern void vlan_VLAN_GetMACBasedConfig(struct emptypb_Empty* param0, struct vlanpb_MACBasedConfig* param1);
extern void vlan_VLAN_AddMACBasedGroup(struct vlanpb_MACBasedGroupEntry* param0, struct emptypb_Empty* param1);
extern void vlan_VLAN_UpdateMACBasedGroup(struct vlanpb_MACBasedGroupEntry* param0, struct emptypb_Empty* param1);
extern void vlan_VLAN_DeleteMACBasedGroup(struct vlanpb_MACBasedGroupEntry* param0, struct emptypb_Empty* param1);
extern void vlan_VLAN_AddMACBasedGroupMember(struct vlanpb_MACBasedGroupMemberEntry* param0, struct emptypb_Empty* param1);
extern void vlan_VLAN_UpdateMACBasedGroupMember(struct vlanpb_MACBasedGroupMemberEntry* param0, struct emptypb_Empty* param1);
extern void vlan_VLAN_DeleteMACBasedGroupMember(struct vlanpb_MACBasedGroupMemberEntry* param0, struct emptypb_Empty* param1);
extern void vlan_VLAN_GetSubnetBasedConfig(struct emptypb_Empty* param0, struct vlanpb_SubnetBasedConfig* param1);
extern void vlan_VLAN_AddSubnetBasedGroup(struct vlanpb_SubnetBasedGroupEntry* param0, struct emptypb_Empty* param1);
extern void vlan_VLAN_UpdateSubnetBasedGroup(struct vlanpb_SubnetBasedGroupEntry* param0, struct emptypb_Empty* param1);
extern void vlan_VLAN_DeleteSubnetBasedGroup(struct vlanpb_SubnetBasedGroupEntry* param0, struct emptypb_Empty* param1);
extern void vlan_VLAN_AddSubnetBasedGroupMember(struct vlanpb_SubnetBasedGroupMemberEntry* param0, struct emptypb_Empty* param1);
extern void vlan_VLAN_UpdateSubnetBasedGroupMember(struct vlanpb_SubnetBasedGroupMemberEntry* param0, struct emptypb_Empty* param1);
extern void vlan_VLAN_DeleteSubnetBasedGroupMember(struct vlanpb_SubnetBasedGroupMemberEntry* param0, struct emptypb_Empty* param1);
extern void vlan_VLAN_GetManagementVlanPorts(struct emptypb_Empty* param0, struct devicepb_PortList* param1);
extern void vlan_VLAN_SetDefaultPortVlan(struct vlanpb_DefaultPortVlanEntry* param0, struct emptypb_Empty* param1);
extern void vlan_VLAN_ClearDefaultPortVlan(struct vlanpb_DefaultPortVlanEntry* param0, struct emptypb_Empty* param1);
extern void vlan_VLAN_UpdateVlanPortVlanStatus(struct vlanpb_VlanPortVlanEntry* param0, struct emptypb_Empty* param1);
extern void vlan_VLAN_DeleteVlanPortVlanStatus(struct vlanpb_VlanPortVlanEntry* param0, struct emptypb_Empty* param1);
extern void cpss_Device_RunCPSSInit(struct emptypb_Empty* param0, struct emptypb_Empty* param1);
extern void cpss_Device_GetArchitecture(struct emptypb_Empty* param0, struct cpsspb_DeviceArchitecture* param1);
extern void cpss_Trunking_SetGroup(struct cpsspb_TrunkingGroupMemberEntry* param0, struct emptypb_Empty* param1);
extern void cpss_Trunking_AddGroup(struct cpsspb_TrunkingMemberEntry* param0, struct emptypb_Empty* param1);
extern void cpss_Trunking_DeleteGroup(struct cpsspb_TrunkingMemberEntry* param0, struct emptypb_Empty* param1);
extern void cpss_Trunking_SetLoadBalanceMode(struct cpsspb_TrunkingLoadBalanceMode* param0, struct emptypb_Empty* param1);
extern void cpss_Trunking_GetLoadBalanceMode(struct emptypb_Empty* param0, struct cpsspb_TrunkingLoadBalanceMode* param1);
extern void cpss_Trunking_GetGroup(struct cpsspb_TrunkingGroupID* param0, struct cpsspb_TrunkingGroupMemberEntry* param1);
extern void cpss_ACL_RunClearAllRules(struct emptypb_Empty* param0, struct emptypb_Empty* param1);
extern void cpss_ACL_UpdateControlRule(struct cpsspb_ACLControlRuleEntry* param0, struct emptypb_Empty* param1);
extern void cpss_ACL_AddControlRule(struct cpsspb_ACLControlRuleEntry* param0, struct emptypb_Empty* param1);
extern void cpss_ACL_DeleteControlRule(struct cpsspb_ACLControlRuleEntry* param0, struct emptypb_Empty* param1);
extern void cpss_ACL_RunClearControlRule(struct cpsspb_ACLControlRuleEntry* param0, struct emptypb_Empty* param1);
extern void cpss_ACL_AddUserDefinedRules(struct cpsspb_ACLUserDefinedRuleList* param0, struct emptypb_Empty* param1);
extern void cpss_ACL_DeleteUserDefinedRules(struct cpsspb_ACLUserDefinedRuleRemovalList* param0, struct emptypb_Empty* param1);
extern void cpss_ACL_RunClearAllUserDefinedRules(struct emptypb_Empty* param0, struct emptypb_Empty* param1);
extern void cpss_CNC_AddCounting(struct cpsspb_CNCCountingEntry* param0, struct emptypb_Empty* param1);
extern void cpss_CNC_DeleteCounting(struct cpsspb_CNCCountingEntry* param0, struct emptypb_Empty* param1);
extern void cpss_CNC_GetCounter(struct cpsspb_CNCCountingEntry* param0, struct cpsspb_CNCCounter* param1);
extern void cpss_FDB_SetAutoLearnEnable(struct cpsspb_FDBAutoLearningEnable* param0, struct emptypb_Empty* param1);
extern void cpss_FDB_SetEntry(struct cpsspb_FDBMACEntry* param0, struct emptypb_Empty* param1);
extern void cpss_FDB_DeleteEntry(struct cpsspb_FDBMACEntry* param0, struct emptypb_Empty* param1);
extern void cpss_FDB_SetAgingTime(struct cpsspb_FDBAgingTime* param0, struct emptypb_Empty* param1);
extern void cpss_FDB_GetAgingTime(struct emptypb_Empty* param0, struct cpsspb_FDBAgingTime* param1);
extern void cpss_FDB_SetSecureBreachNaPortEnable(struct cpsspb_FDBSecureBreachEntry* param0, struct emptypb_Empty* param1);
extern void cpss_FDB_GetSecureBreachNaPortEnable(struct cpsspb_DevicePortEntry* param0, struct cpsspb_Enabled* param1);
extern void cpss_FDB_GetCounter(struct emptypb_Empty* param0, struct cpsspb_FDBCounters* param1);
extern void cpss_FDB_RunFlush(struct cpsspb_FDBFlushEntry* param0, struct emptypb_Empty* param1);
extern void cpss_FDB_RunDump(struct emptypb_Empty* param0, struct cpsspb_FDBDumpEntry* param1);
extern void cpss_Mirroring_RunClearAll(struct emptypb_Empty* param0, struct emptypb_Empty* param1);
extern void cpss_Mirroring_SetSessions(struct cpsspb_MirroringSessionList* param0, struct emptypb_Empty* param1);
extern void cpss_Mirroring_SetPolicyBased(struct cpsspb_MirroringPolicyBased* param0, struct emptypb_Empty* param1);
extern void cpss_Misc_RunMACRegisterWrite(struct cpsspb_MiscMACRegisterEntry* param0, struct emptypb_Empty* param1);
extern void cpss_Misc_RunMACRegisterRead(struct cpsspb_MiscMACRegisterEntry* param0, struct cpsspb_MiscRegisterData* param1);
extern void cpss_Misc_RunSMIRegisterWrite(struct cpsspb_MiscSMIRegisterEntry* param0, struct emptypb_Empty* param1);
extern void cpss_Misc_RunSMIRegisterRead(struct cpsspb_MiscSMIRegisterEntry* param0, struct cpsspb_MiscRegisterData* param1);
extern void cpss_Misc_RunXSMIRegisterWrite(struct cpsspb_MiscXSMIRegisterEntry* param0, struct emptypb_Empty* param1);
extern void cpss_Misc_RunXSMIRegisterRead(struct cpsspb_MiscXSMIRegisterEntry* param0, struct cpsspb_MiscRegisterData* param1);
extern void cpss_Misc_GetCPUTemperature(struct emptypb_Empty* param0, struct cpsspb_MiscTemperature* param1);
extern void cpss_Misc_GetMACTemperature(struct emptypb_Empty* param0, struct cpsspb_MiscTemperature* param1);
extern void cpss_Misc_GetPHYPortTemperature(struct cpsspb_DevicePortEntry* param0, struct cpsspb_MiscTemperature* param1);
extern void cpss_Misc_GetCPUModel(struct emptypb_Empty* param0, struct cpsspb_MiscModel* param1);
extern void cpss_Misc_GetPHYPortModel(struct cpsspb_DevicePortEntry* param0, struct cpsspb_MiscPHYPortModel* param1);
extern void cpss_Vlan_AddGroup(struct cpsspb_VlanID* param0, struct emptypb_Empty* param1);
extern void cpss_Vlan_DeleteGroup(struct cpsspb_VlanID* param0, struct emptypb_Empty* param1);
extern void cpss_Vlan_AddMember(struct cpsspb_VlanMemberTaggingList* param0, struct emptypb_Empty* param1);
extern void cpss_Vlan_DeleteMember(struct cpsspb_VlanMemberTaggingList* param0, struct emptypb_Empty* param1);
extern void cpss_Vlan_UpdateAcceptFrameType(struct cpsspb_VlanAcceptFrameTypeEntry* param0, struct emptypb_Empty* param1);
extern void cpss_Vlan_GetAcceptFrameType(struct cpsspb_DeviceInterfaceEntry* param0, struct cpsspb_VlanAcceptFrameTypeEntry* param1);
extern void cpss_Vlan_UpdateDefaultVID(struct cpsspb_VlanDefaultVIDEntry* param0, struct emptypb_Empty* param1);
extern void cpss_Vlan_GetDefaultVID(struct cpsspb_DeviceInterfaceEntry* param0, struct cpsspb_VlanID* param1);
extern void cpss_Vlan_RunFlush(struct emptypb_Empty* param0, struct emptypb_Empty* param1);
extern void cpss_Vlan_GetStatus(struct emptypb_Empty* param0, struct cpsspb_VlanStatusList* param1);
extern void cpss_Vlan_UpdateTPIDEntry(struct cpsspb_VlanTPIDEntry* param0, struct emptypb_Empty* param1);
extern void cpss_Vlan_DumpTPIDTable(struct emptypb_Empty* param0, struct cpsspb_VlanTPIDList* param1);
extern void cpss_Vlan_UpdateTPIDIndex(struct cpsspb_VlanTPIDIndexEntry* param0, struct emptypb_Empty* param1);
extern void cpss_Vlan_GetTPIDIndex(struct cpsspb_DeviceInterfaceEntry* param0, struct cpsspb_VlanTPIDIndexEntry* param1);
extern void cpss_Vlan_RunClearTPIDIndex(struct cpsspb_DeviceInterfaceEntry* param0, struct emptypb_Empty* param1);
extern void cpss_Vlan_SetTunnelEnable(struct cpsspb_VlanTunnelEntry* param0, struct emptypb_Empty* param1);
extern void cpss_Vlan_GetTunnelEnable(struct cpsspb_DeviceInterfaceEntry* param0, struct cpsspb_Enabled* param1);
extern void cpss_Vlan_UpdateProtocolClass(struct cpsspb_VlanProtocolClassEntry* param0, struct emptypb_Empty* param1);
extern void cpss_Vlan_GetProtocolClass(struct cpsspb_VlanProtocolClassID* param0, struct cpsspb_VlanProtocolClassEntry* param1);
extern void cpss_Vlan_RunClearProtocolClass(struct cpsspb_VlanProtocolClassID* param0, struct emptypb_Empty* param1);
extern void cpss_Vlan_UpdateProtocol(struct cpsspb_VlanProtocolEntry* param0, struct emptypb_Empty* param1);
extern void cpss_Vlan_GetProtocol(struct cpsspb_VlanProtocolEntry* param0, struct cpsspb_VlanProtocolEntry* param1);
extern void cpss_Vlan_RunClearProtocol(struct cpsspb_VlanProtocolEntry* param0, struct emptypb_Empty* param1);
extern void cpss_Vlan_UpdateTranslationEnable(struct cpsspb_VlanTranslationEntry* param0, struct emptypb_Empty* param1);
extern void cpss_Vlan_GetTranslationEnable(struct cpsspb_DeviceInterfaceEntry* param0, struct cpsspb_Enabled* param1);
extern void cpss_Vlan_UpdateTranslationMapping(struct cpsspb_VlanTranslationMappingEntry* param0, struct emptypb_Empty* param1);
extern void cpss_Vlan_GetTranslationMapping(struct cpsspb_VlanID* param0, struct cpsspb_VlanID* param1);
extern void cpss_Vlan_RunClearTranslationMapping(struct cpsspb_VlanID* param0, struct emptypb_Empty* param1);
extern void cpss_Multicast_SetBridgeGroup(struct cpsspb_MulticastBridgeGroupEntry* param0, struct emptypb_Empty* param1);
extern void cpss_Multicast_DeleteBridgeGroup(struct cpsspb_FDBIdentifyEntry* param0, struct emptypb_Empty* param1);
extern void cpss_Multicast_SetUnregisteredFlooding(struct cpsspb_MulticastUnregisteredFloodingEntry* param0, struct emptypb_Empty* param1);
extern void cpss_Multicast_RunClearUnregisteredFlooding(struct cpsspb_VlanID* param0, struct emptypb_Empty* param1);
extern void cpss_Multicast_RunDump(struct emptypb_Empty* param0, struct cpsspb_MulticastTable* param1);
extern void cpss_Multicast_RunFlush(struct emptypb_Empty* param0, struct emptypb_Empty* param1);
extern void cpss_PacketControl_UpdateSTPControl(struct cpsspb_PacketControlActionEntry* param0, struct emptypb_Empty* param1);
extern void cpss_PacketControl_UpdateLACPControl(struct cpsspb_PacketControlActionEntry* param0, struct emptypb_Empty* param1);
extern void cpss_PacketControl_UpdateDot1XControl(struct cpsspb_PacketControlActionEntry* param0, struct emptypb_Empty* param1);
extern void cpss_PacketControl_UpdateLoopControl(struct cpsspb_PacketControlActionEntry* param0, struct emptypb_Empty* param1);
extern void cpss_PacketControl_UpdateDHCPv4DiscoverControl(struct cpsspb_PacketControlActionEntry* param0, struct emptypb_Empty* param1);
extern void cpss_PacketControl_UpdateDHCPv4BroadcastOfferControl(struct cpsspb_PacketControlActionEntry* param0, struct emptypb_Empty* param1);
extern void cpss_PacketControl_UpdateDHCPv4UDPDestination68Control(struct cpsspb_PacketControlActionEntry* param0, struct emptypb_Empty* param1);
extern void cpss_PacketControl_UpdateDHCPv4UDPDestination67Control(struct cpsspb_PacketControlActionEntry* param0, struct emptypb_Empty* param1);
extern void cpss_PacketControl_UpdateARPControl(struct cpsspb_PacketControlActionEntry* param0, struct emptypb_Empty* param1);
extern void cpss_PacketControl_UpdateIGMPVlanControl(struct cpsspb_PacketControlActionEntry* param0, struct emptypb_Empty* param1);
extern void cpss_PacketControl_UpdateMLDVlanControl(struct cpsspb_PacketControlActionEntry* param0, struct emptypb_Empty* param1);
extern void cpss_PacketControl_UpdateGVRPControl(struct cpsspb_PacketControlActionEntry* param0, struct emptypb_Empty* param1);
extern void cpss_PacketControl_GetStatus(struct emptypb_Empty* param0, struct cpsspb_PacketControlStatusList* param1);
extern void cpss_Policer_SetStormCountingEnable(struct cpsspb_PolicerStormCountingEnableEntry* param0, struct emptypb_Empty* param1);
extern void cpss_Policer_GetStormCountingEnable(struct cpsspb_DevicePortEntry* param0, struct cpsspb_PolicerStormCountingEnableEntry* param1);
extern void cpss_Policer_GetStormCountingCounter(struct cpsspb_DevicePortEntry* param0, struct cpsspb_PolicerStormCountingCounterEntry* param1);
extern void cpss_Port_SetEnable(struct cpsspb_PortEnableEntry* param0, struct emptypb_Empty* param1);
extern void cpss_Port_GetEnable(struct cpsspb_DevicePortEntry* param0, struct cpsspb_PortEnableEntry* param1);
extern void cpss_Port_SetSpeedDuplex(struct cpsspb_PortSpeedDuplexEntry* param0, struct emptypb_Empty* param1);
extern void cpss_Port_GetSpeedDuplex(struct cpsspb_DevicePortEntry* param0, struct cpsspb_PortSpeedDuplexEntry* param1);
extern void cpss_Port_SetFlowControl(struct cpsspb_PortFlowControlEntry* param0, struct emptypb_Empty* param1);
extern void cpss_Port_GetFlowControl(struct cpsspb_DevicePortEntry* param0, struct cpsspb_PortFlowControlEntry* param1);
extern void cpss_Port_SetEnableEEE(struct cpsspb_PortEEEEntry* param0, struct emptypb_Empty* param1);
extern void cpss_Port_GetEnableEEE(struct cpsspb_DevicePortEntry* param0, struct cpsspb_PortEEEEntry* param1);
extern void cpss_Port_GetCounter(struct cpsspb_DevicePortEntry* param0, struct cpsspb_PortCounterEntry* param1);
extern void cpss_Port_RunClearCounter(struct cpsspb_DevicePortEntry* param0, struct emptypb_Empty* param1);
extern void cpss_Port_SetIsolation(struct cpsspb_PortIsolationList* param0, struct emptypb_Empty* param1);
extern void cpss_Port_GetIsolation(struct emptypb_Empty* param0, struct cpsspb_PortIsolationList* param1);
extern void cpss_Port_GetIPG(struct emptypb_Empty* param0, struct cpsspb_PortIPGSize* param1);
extern void cpss_Port_GetFaultStatus(struct cpsspb_DevicePortEntry* param0, struct cpsspb_PortFaultStatusEntry* param1);
extern void cpss_Port_GetStatus(struct cpsspb_DevicePortEntry* param0, struct cpsspb_PortStatusEntry* param1);
extern void cpss_PTP_SetMode(struct cpsspb_PTPMode* param0, struct emptypb_Empty* param1);
extern void cpss_PTP_GetIngrTS(struct cpsspb_PTPMessageInfo* param0, struct cpsspb_PTPQueueInfo* param1);
extern void cpss_PTP_GetEgrTS(struct cpsspb_PTPMessageInfo* param0, struct cpsspb_PTPQueueInfo* param1);
extern void cpss_PTP_SetLinkDelay(struct cpsspb_PTPLinkDelay* param0, struct emptypb_Empty* param1);
extern void cpss_PTP_GetLinkDelay(struct cpsspb_PTPLinkDelay* param0, struct cpsspb_PTPLinkDelay* param1);
extern void cpss_PTP_SetEnableSyncE(struct cpsspb_PTPSyncE* param0, struct emptypb_Empty* param1);
extern void cpss_PTP_SetToD(struct cpsspb_PTPToD* param0, struct emptypb_Empty* param1);
extern void cpss_PTP_GetToD(struct emptypb_Empty* param0, struct cpsspb_PTPToD* param1);
extern void cpss_PTP_SetToDFrequency(struct cpsspb_PTPToDFrequency* param0, struct emptypb_Empty* param1);
extern void cpss_PTP_SetPortDelay(struct cpsspb_PTPPortDelay* param0, struct emptypb_Empty* param1);
extern void cpss_PTP_GetPortDelay(struct cpsspb_PTPPortDelay* param0, struct cpsspb_PTPPortDelay* param1);
extern void cpss_QoS_SetQoSPortProfile(struct cpsspb_QoSPortProfileList* param0, struct emptypb_Empty* param1);
extern void cpss_QoS_GetQoSPortProfile(struct emptypb_Empty* param0, struct cpsspb_QoSPortProfileList* param1);
extern void cpss_QoS_SetQoSCoSProfile(struct cpsspb_QoSCoSProfileList* param0, struct emptypb_Empty* param1);
extern void cpss_QoS_GetQoSCoSProfile(struct emptypb_Empty* param0, struct cpsspb_QoSCoSProfileList* param1);
extern void cpss_QoS_SetQoSDSCPProfile(struct cpsspb_QoSDSCPProfileList* param0, struct emptypb_Empty* param1);
extern void cpss_QoS_GetQoSDSCPProfile(struct emptypb_Empty* param0, struct cpsspb_QoSDSCPProfileList* param1);
extern void cpss_QoS_SetQoSQueueProfile(struct cpsspb_QoSPortQueueList* param0, struct emptypb_Empty* param1);
extern void cpss_QoS_GetQoSQueueProfile(struct emptypb_Empty* param0, struct cpsspb_QoSPortQueueList* param1);
extern void cpss_RateLimiting_SetIngress(struct cpsspb_RateLimitingIngressList* param0, struct emptypb_Empty* param1);
extern void cpss_RateLimiting_GetIngress(struct emptypb_Empty* param0, struct cpsspb_RateLimitingIngressList* param1);
extern void cpss_RateLimiting_SetEgress(struct cpsspb_RateLimitingEgressList* param0, struct emptypb_Empty* param1);
extern void cpss_RateLimiting_GetEgress(struct emptypb_Empty* param0, struct cpsspb_RateLimitingEgressList* param1);
extern void cpss_STP_SetPortState(struct cpsspb_STPPortState* param0, struct emptypb_Empty* param1);
extern void cpss_STP_GetPortState(struct cpsspb_STPPortState* param0, struct cpsspb_STPIDState* param1);
extern void cpss_STP_SetVlanBinding(struct cpsspb_STPVlanBinding* param0, struct emptypb_Empty* param1);
extern void cpss_STP_GetVlanBinding(struct cpsspb_STPID* param0, struct cpsspb_VlanList* param1);
extern void cpss_STP_RunClearVlanBinding(struct cpsspb_STPVlanBinding* param0, struct emptypb_Empty* param1);
extern void device_Device_GetMACAddress(struct emptypb_Empty* param0, struct commonpb_MACAddress* param1);
extern void device_Device_GetPortLists(struct emptypb_Empty* param0, struct devicepb_PortList* param1);
extern void device_Device_GetLAGPortLists(struct emptypb_Empty* param0, struct devicepb_PortList* param1);
extern void device_Device_GetPoEPortLists(struct emptypb_Empty* param0, struct devicepb_PortList* param1);
extern void device_Device_GetHardwareTableSize(struct emptypb_Empty* param0, struct devicepb_HardwareTableSize* param1);
extern void device_Device_GetDeviceInfo(struct emptypb_Empty* param0, struct devicepb_Info* param1);
extern void device_Device_GetBoardInfo(struct emptypb_Empty* param0, struct devicepb_BoardInfo* param1);
extern void device_Device_GetHardwareInfo(struct emptypb_Empty* param0, struct devicepb_HardwareInfo* param1);
extern void device_Device_GetFunctionControl(struct emptypb_Empty* param0, struct devicepb_FunctionControlAll* param1);
extern void device_Device_GetBoundary(struct emptypb_Empty* param0, struct devicepb_BoundaryAll* param1);
extern void device_Device_GetPath(struct emptypb_Empty* param0, struct devicepb_PathAll* param1);
extern void device_Device_GetTimeControlInfo(struct emptypb_Empty* param0, struct devicepb_TimeControlInfo* param1);
extern void event_Event_WaitInLine(struct eventpb_ServiceInitialized* param0, struct emptypb_Empty* param1);
extern void event_Event_SetManagmentVLANPriority(struct eventpb_ManagmentVLANPriority* param0, struct emptypb_Empty* param1);
extern void event_Event_EncodeDecode(struct eventpb_CryptoRequest* param0, struct eventpb_CryptoResponse* param1);
extern void event_Event_Base64Encode(struct eventpb_CryptoBase64Request* param0, struct eventpb_CryptoBase64Response* param1);
extern void event_Event_Base64Decode(struct eventpb_CryptoBase64Request* param0, struct eventpb_CryptoBase64Response* param1);
extern void hardware_Hardware_GetSFPPlugin(struct devicepb_PortList* param0, struct hardwarepb_SignalState* param1);
extern void hardware_Hardware_GetSFPRxLoss(struct devicepb_PortList* param0, struct hardwarepb_SignalState* param1);
extern void hardware_Hardware_GetSFPTxFaild(struct devicepb_PortList* param0, struct hardwarepb_SignalState* param1);
extern void hardware_Hardware_GetSFPRom(struct devicepb_PortList* param0, struct hardwarepb_SFPInfo* param1);
extern void hardware_Hardware_GetSFPTxDisable(struct devicepb_PortList* param0, struct hardwarepb_SignalState* param1);
extern void hardware_Hardware_SetSFPTxDisable(struct hardwarepb_EnableRequest* param0, struct emptypb_Empty* param1);
extern void hardware_Hardware_GetSFPLED(struct devicepb_PortList* param0, struct hardwarepb_PortLED* param1);
extern void hardware_Hardware_SetSFPLED(struct hardwarepb_PortLED* param0, struct emptypb_Empty* param1);
extern void hardware_Hardware_GetResetButtonStatus(struct emptypb_Empty* param0, struct commonpb_State* param1);
extern void hardware_Hardware_GetConfig(struct emptypb_Empty* param0, struct hardwarepb_Config* param1);
extern void hardware_Hardware_SetConfig(struct hardwarepb_Config* param0, struct emptypb_Empty* param1);
extern void hardware_Hardware_GetPortInfo(struct emptypb_Empty* param0, struct hardwarepb_Ports* param1);
extern void hardware_Hardware_GetTemperature(struct emptypb_Empty* param0, struct hardwarepb_TemperatureStatus* param1);
extern void hardware_Hardware_GetPowerStatus(struct emptypb_Empty* param0, struct hardwarepb_PowerState* param1);
extern void hardware_Hardware_GetGPS(struct emptypb_Empty* param0, struct hardwarepb_GPSStatus* param1);
extern void hardware_Hardware_SetGPS(struct hardwarepb_Enable* param0, struct emptypb_Empty* param1);
extern void hardware_Hardware_SetGPSCommand(struct hardwarepb_GPSCommand* param0, struct hardwarepb_GPSCommand* param1);
extern void hardware_Hardware_GetSystemLED(struct emptypb_Empty* param0, struct hardwarepb_LEDType* param1);
extern void hardware_Hardware_SetSystemLED(struct hardwarepb_LEDType* param0, struct emptypb_Empty* param1);
extern void hardware_Hardware_SetFanSpeed(struct hardwarepb_FanPercent* param0, struct emptypb_Empty* param1);
extern void hardware_Hardware_GetFanSpeed(struct emptypb_Empty* param0, struct hardwarepb_FanPercent* param1);
extern void hardware_Hardware_SetGPSLED(struct hardwarepb_LEDType* param0, struct emptypb_Empty* param1);
extern void hardware_Hardware_GetGPSLED(struct emptypb_Empty* param0, struct hardwarepb_LEDType* param1);
extern void hardware_Hardware_SetFanLED(struct hardwarepb_LEDType* param0, struct emptypb_Empty* param1);
extern void hardware_Hardware_GetFanLED(struct emptypb_Empty* param0, struct hardwarepb_LEDType* param1);
extern void hardware_Hardware_SetUSBEnable(struct hardwarepb_Enable* param0, struct emptypb_Empty* param1);
extern void hardware_Hardware_GetUSBStatus(struct emptypb_Empty* param0, struct hardwarepb_USBStatus* param1);
extern void hardware_Hardware_SetHeater(struct hardwarepb_Enable* param0, struct emptypb_Empty* param1);
extern void hardware_Hardware_GetHeater(struct hardwarepb_Enable* param0, struct emptypb_Empty* param1);
extern void hardware_Hardware_GetMCUVersion(struct emptypb_Empty* param0, struct hardwarepb_MCUInfo* param1);
extern void hardware_Hardware_GetI2CDevice(struct emptypb_Empty* param0, struct hardwarepb_DeviceI2CAddress* param1);
extern void hardware_Hardware_GetCPU(struct emptypb_Empty* param0, struct hardwarepb_InfoList* param1);
extern void hardware_Hardware_GetMemoryTotal(struct emptypb_Empty* param0, struct hardwarepb_InfoList* param1);
extern void hardware_Hardware_RunMemoryTest(struct emptypb_Empty* param0, struct hardwarepb_InfoList* param1);
extern void hardware_Hardware_GetECCState(struct emptypb_Empty* param0, struct hardwarepb_InfoList* param1);
extern void hardware_Hardware_GetSPI(struct emptypb_Empty* param0, struct hardwarepb_InfoList* param1);
extern void hardware_Hardware_GetSPIPartition(struct emptypb_Empty* param0, struct hardwarepb_InfoList* param1);
extern void hardware_Hardware_GetSPIFlash(struct emptypb_Empty* param0, struct hardwarepb_InfoList* param1);
extern void hardware_Hardware_GeteMMC(struct emptypb_Empty* param0, struct hardwarepb_InfoList* param1);
extern void hardware_Hardware_GeteMMCPartition(struct emptypb_Empty* param0, struct hardwarepb_InfoList* param1);
extern void hardware_Hardware_SetWatchDog(struct hardwarepb_Enable* param0, struct emptypb_Empty* param1);
extern void hardware_Hardware_GetSecureICExist(struct emptypb_Empty* param0, struct hardwarepb_InfoList* param1);
extern void hardware_Hardware_RunSecureICVerify(struct emptypb_Empty* param0, struct hardwarepb_InfoList* param1);
extern void hardware_Hardware_GetRTC(struct emptypb_Empty* param0, struct timestamppb_Timestamp* param1);
extern void hardware_Hardware_SetRTC(struct timestamppb_Timestamp* param0, struct emptypb_Empty* param1);
extern void hardware_Hardware_RunSync(struct emptypb_Empty* param0, struct emptypb_Empty* param1);
extern void hardware_Hardware_SetNetwork(struct hardwarepb_Network* param0, struct emptypb_Empty* param1);
extern void hardware_Hardware_GetNetwork(struct emptypb_Empty* param0, struct hardwarepb_Network* param1);
extern void hardware_Hardware_SetUSBNetwork(struct hardwarepb_USBEthernetConfig* param0, struct emptypb_Empty* param1);
extern void hardware_Hardware_GetUSBNetwork(struct emptypb_Empty* param0, struct hardwarepb_USBEthernetConfig* param1);
extern void hardware_Hardware_RunPing(struct hardwarepb_Network* param0, struct hardwarepb_InfoList* param1);
extern void hardware_Hardware_RunProdMode(struct emptypb_Empty* param0, struct emptypb_Empty* param1);
extern void hardware_Hardware_GetTimeControlRegister(struct hardwarepb_TimeControlRegister* param0, struct hardwarepb_TimeControlRegister* param1);
extern void hardware_Hardware_SetTimeControlRegister(struct hardwarepb_TimeControlRegister* param0, struct emptypb_Empty* param1);
extern void hardware_HardwarePoE_SetSystemBudget(struct hardwarepb_PoESystemBudgetEntry* param0, struct emptypb_Empty* param1);
extern void hardware_HardwarePoE_SetPortSetting(struct hardwarepb_PoESetting* param0, struct emptypb_Empty* param1);
extern void hardware_HardwarePoE_GetPortSetting(struct emptypb_Empty* param0, struct hardwarepb_PoESetting* param1);
extern void hardware_HardwarePoE_GetSystemStatus(struct emptypb_Empty* param0, struct hardwarepb_PoESystemStatus* param1);
extern void hardware_HardwarePoE_GetPortStatus(struct emptypb_Empty* param0, struct hardwarepb_PoEPortStatusList* param1);
extern void hardware_HardwarePoE_SetPortLED(struct hardwarepb_PortLED* param0, struct emptypb_Empty* param1);
extern void hardware_HardwarePoE_GetPortLED(struct emptypb_Empty* param0, struct hardwarepb_PortLED* param1);
extern void hardware_HardwarePoE_GetPoEMaxLED(struct emptypb_Empty* param0, struct hardwarepb_LEDType* param1);
extern void hardware_HardwarePoE_SetPoEMaxLED(struct hardwarepb_LEDType* param0, struct emptypb_Empty* param1);
extern void log_Log_GetConfig(struct emptypb_Empty* param0, struct logpb_Config* param1);
extern void log_Log_GetBasicConfig(struct emptypb_Empty* param0, struct logpb_BasicConfig* param1);
extern void log_Log_UpdateBasicConfig(struct logpb_BasicConfig* param0, struct emptypb_Empty* param1);
extern void log_Log_GetTargetConfig(struct emptypb_Empty* param0, struct logpb_TargetConfig* param1);
extern void log_Log_AddTargetConfigEntry(struct logpb_TargetConfigEntry* param0, struct emptypb_Empty* param1);
extern void log_Log_UpdateTargetConfigEntry(struct logpb_TargetConfigEntry* param0, struct emptypb_Empty* param1);
extern void log_Log_DeleteTargetConfigEntry(struct logpb_TargetConfigEntry* param0, struct emptypb_Empty* param1);
extern void log_Log_GetActionConfig(struct emptypb_Empty* param0, struct logpb_ActionConfig* param1);
extern void log_Log_UpdateActionConfig(struct logpb_ActionConfig* param0, struct emptypb_Empty* param1);
extern void log_Log_RunSendTestEvent(struct emptypb_Empty* param0, struct emptypb_Empty* param1);
extern void log_Log_GetStatistics(struct emptypb_Empty* param0, struct logpb_Statistics* param1);
extern void log_Log_RunCleanStatistics(struct emptypb_Empty* param0, struct emptypb_Empty* param1);
extern void log_Log_GetRecordTargetLogList(struct emptypb_Empty* param0, struct logpb_LogFiles* param1);
extern void log_Log_RunCleanRecordTargetLogList(struct emptypb_Empty* param0, struct emptypb_Empty* param1);
extern void log_Log_RunSaveLogToYAML(struct commonpb_Path* param0, struct emptypb_Empty* param1);
extern void snmp_SNMP_SetConfig(struct userinterfacepb_SNMPConfig* param0, struct emptypb_Empty* param1);
extern void snmp_SNMP_SetUsersConfig(struct accesspb_UsersConfig* param0, struct emptypb_Empty* param1);
extern void snmp_SNMP_SetGroupsConfig(struct accesspb_GroupsConfig* param0, struct emptypb_Empty* param1);
extern void snmp_SNMP_RunRestartSNMPServer(struct commonpb_Confirm* param0, struct emptypb_Empty* param1);
extern void snmp_SNMP_ActivateAgentCertificate(struct filespb_CertificateID* param0, struct emptypb_Empty* param1);
extern void snmp_SNMP_ActivateManagerCertificate(struct filespb_CertificateUserIDList* param0, struct emptypb_Empty* param1);
extern void snmp_SNMP_DeactivateManagerCertificate(struct filespb_CertificateUserID* param0, struct emptypb_Empty* param1);
extern void snmp_SNMP_GetEngineInfo(struct emptypb_Empty* param0, struct snmppb_EngineInfo* param1);
extern void snmptrap_SNMPTrap_SetUsersConfig(struct accesspb_UsersConfig* param0, struct emptypb_Empty* param1);
extern void snmptrap_SNMPTrap_SetEngineID(struct userinterfacepb_SNMPConfig* param0, struct emptypb_Empty* param1);
extern void snmptrap_SNMPTrap_GetTrapCounters(struct emptypb_Empty* param0, struct snmptrappb_SNMPTrapCounter* param1);
extern void timecontrol_TimeControl_GetInputMonitorStatus(struct timecontrolpb_InputClockManage* param0, struct timecontrolpb_MonitorStatus* param1);
extern void timecontrol_TimeControl_GetDPLLStatus(struct timecontrolpb_DPLLManage* param0, struct timecontrolpb_DPLLStatus* param1);
extern void timecontrol_TimeControl_SetDPLLRefPriority(struct timecontrolpb_DPLLRefPriority* param0, struct emptypb_Empty* param1);
extern void timecontrol_TimeControl_GetDPLLRefPriority(struct timecontrolpb_DPLLRefPriorityManage* param0, struct timecontrolpb_DPLLRefPriority* param1);
extern void timecontrol_TimeControl_SetInputClockFreq(struct timecontrolpb_SyncEInputClockSpeed* param0, struct emptypb_Empty* param1);
extern void timecontrol_TimeControl_GetInputClockFreq(struct timecontrolpb_InputClockManage* param0, struct timecontrolpb_SyncEInputClockSpeed* param1);
extern void timecontrol_TimeControl_SetToDSource(struct timecontrolpb_ToDSource* param0, struct emptypb_Empty* param1);
extern void timecontrol_TimeControl_GetToDSource(struct emptypb_Empty* param0, struct timecontrolpb_ToDSource* param1);
extern void timecontrol_TimeControl_SetToD(struct timecontrolpb_ToDTime* param0, struct emptypb_Empty* param1);
extern void timecontrol_TimeControl_GetToD(struct timecontrolpb_DPLLToDManage* param0, struct timecontrolpb_ToDTime* param1);
extern void timecontrol_TimeControl_SetFrequencyControl(struct timecontrolpb_DPLLFrequencyControl* param0, struct emptypb_Empty* param1);
extern void timecontrol_TimeControl_GetFrequencyControl(struct timecontrolpb_DPLLManage* param0, struct timecontrolpb_DPLLFrequencyControl* param1);
extern void timecontrol_TimeControl_SetPhaseControl(struct timecontrolpb_DPLLPhaseControl* param0, struct emptypb_Empty* param1);
extern void timecontrol_TimeControl_GetPhaseControl(struct timecontrolpb_DPLLManage* param0, struct timecontrolpb_DPLLPhaseControl* param1);
extern void timecontrol_TimeControl_SetPhaseSlopeLimit(struct timecontrolpb_DPLLPhaseSlopeLimit* param0, struct emptypb_Empty* param1);
extern void timecontrol_TimeControl_GetPhaseSlopeLimit(struct timecontrolpb_DPLLManage* param0, struct timecontrolpb_DPLLPhaseSlopeLimit* param1);
extern void timecontrol_TimeControl_SetPhaseControlTimer(struct timecontrolpb_DPLLPhaseControlTimer* param0, struct emptypb_Empty* param1);
extern void timecontrol_TimeControl_GetPhaseControlTimer(struct timecontrolpb_DPLLManage* param0, struct timecontrolpb_DPLLPhaseControlTimer* param1);

#ifdef __cplusplus
}
#endif
